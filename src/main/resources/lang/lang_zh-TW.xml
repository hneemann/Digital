<?xml version='1.0' encoding='UTF-8'?>
<resources>
  <string name="addr">位址</string>
  <string name="tableOfContent">目錄</string>
  <string name="general">一般使用</string>
  <string name="revision">修訂版本</string>
  <string name="date">日期</string>
  <string name="settings">以下內容為可用的模擬器設定</string>
  <string name="maxValue">最大值</string>
  <string name="attr_dialogTitle">屬性</string>
  <string name="attr_openCircuit">打開電路</string>
  <string name="attr_openCircuitLabel">包含電路：</string>
  <string name="attr_openCircuit_tt">在新視窗中打開電路</string>
  <string name="attr_help">幫助</string>
  <string name="attr_help_tt">顯示該元件的簡介</string>
  <string name="attr_panel_primary">基礎設定</string>
  <string name="attr_panel_secondary">高級設定</string>
  <string name="btn_discard">忽略變更</string>
  <string name="btn_edit">編輯</string>
  <string name="btn_editFurther">繼續編輯</string>
  <string name="btn_load">載入</string>
  <string name="btn_save">儲存</string>
  <string name="btn_create">建立</string>
  <string name="btn_create_tt">在新視窗中建立電路</string>
  <string name="btn_editDetached">分離編輯</string>
  <string name="btn_editDetached_tt">以非模態方式打開對話框</string>
  <string name="btn_openInBrowser">瀏覽器打開</string>
  <string name="btn_openInBrowser_tt">在瀏覽器中打開幫助文字</string>
  <string name="btn_clearData">清除</string>
  <string name="btn_clearData_tt">所有值將被置為0！</string>
  <string name="btn_addTransitions">轉換</string>
  <string name="btn_addTransitions_tt">所有可能的轉換被添加為測試用例。</string>
  <string name="btn_newName">新名稱</string>
  <string name="btn_saveAnyway">始終儲存</string>
  <string name="btn_overwrite">覆蓋</string>
  <string name="btn_apply">應用</string>
  <string name="btn_editRom_tt">編輯所選 ROM/EEPROM 中的內容</string>
  <string name="btn_clearRom_tt">移除所選 ROM 中儲存的數據。</string>
  <string name="btn_saveTemplate">建立模板</string>
  <string name="btn_saveTemplate_tt">建立SVG模板，之後可以使用 Inkscape 編輯</string>
  <string name="btn_loadSvg">匯入</string>
  <string name="btn_loadSvg_tt">匯入 SVG 檔案。如果需要建立 SVG 檔案，最好的方式時首先建立 SVG 模板，然後進行編輯。</string>
  <string name="msg_warning">警告</string>
  <string name="cancel">取消</string>
  <string name="digital">Digital</string>
  <string name="expression">運算式</string>
  <string name="elem_Help_inputs">輸入</string>
  <string name="elem_Help_outputs">輸出</string>
  <string name="elem_Help_attributes">屬性</string>
  <string name="elem_Basic_In">邏輯運算輸入 {0}</string>
  <string name="elem_Basic_Out">邏輯運算結果</string>
  <string name="elem_And">AND 門</string>
  <string name="elem_And_tt">二進制AND 門，僅當所有輸入為 1 時輸出為 1。
      其輸入和輸出也可以使用多位總線，此時將執行按位與運算。</string>
  <string name="elem_NAnd">與NOT 門</string>
  <string name="elem_NAnd_tt">與和非的組合。僅當所有輸入為 1 時，輸出為 0。其輸入也可以使用多位總線，此時將先執行按位與運算，然後執行邏輯非運算。</string>
  <string name="elem_Or">OR 門</string>
  <string name="elem_Or_tt">二進制OR 門，如果其中一個輸入為 1 則輸出 1。
      其輸入和輸出也可以使用多位總線，此時將執行按位或運算。</string>
  <string name="elem_NOr">或NOT 門</string>
  <string name="elem_NOr_tt">OR 門和NOT 門的組合。
    如果其中一個輸入為 1 則輸出為 0，如果所有輸入為 0，輸出為 1。
      其輸入也可以使用多位總線，此時將先執行按位或運算，然後執行邏輯非運算。</string>
  <string name="elem_XOr">異OR 門</string>
  <string name="elem_XOr_tt">如果兩個輸入被使用，當兩個輸入相等時輸出為 0，否則為 1。
      如果多於兩個輸入，其行為類似於級聯的異OR 門(A 異或 B 異或 C = (A 異或 B) 異或 C)。
      其輸入也可以使用多位總線，此時將執行按位異或運算。</string>
  <string name="elem_XNOr">異或NOT 門</string>
  <string name="elem_XNOr_tt">異OR 門和NOT 門的組合。</string>
  <string name="elem_Not">NOT 門</string>
  <string name="elem_Not_tt">翻轉輸入，1 變為 0,0變為 1。
      其輸入和輸出也可以使用多位總線，此時將執行按位非運算。</string>
  <string name="elem_Not_pin_in">NOT 門的輸入</string>
  <string name="elem_Not_pin_out">翻轉後的輸入值</string>
  <string name="elem_LookUpTable">查詢表</string>
  <string name="elem_LookUpTable_short">LUT</string>
  <string name="elem_LookUpTable_tt">從一張儲存表中獲取輸出，該元件可以模擬任何組合電路。</string>
  <string name="elem_LookUpTable_pin_in">輸入 {0}，和其他輸入共同定義將要返回的所儲存內容位址。</string>
  <string name="elem_LookUpTable_pin_out">根據指定的輸入組合，返回對應的儲存值。</string>
  <string name="elem_Delay">延遲</string>
  <string name="elem_Delay_tt">延遲訊號傳輸。Digital 中的所有元件具有相同的傳輸延遲單位，該元件用於實現必要的傳輸延遲。</string>
  <string name="elem_Delay_pin_in">將要延遲的輸入訊號</string>
  <string name="elem_Delay_pin_out">經過延遲的輸入訊號(預設一個延遲單位)</string>
  <string name="elem_Out">輸出</string>
  <string name="elem_Out_tt">用於在電路中顯示輸出訊號。也用於連接子電路。
      當用於生成 CPLD 或 FPGA 程式碼時，用於為其賦值接腳編號。</string>
  <string name="elem_Out_pin_in">用於連接輸出</string>
  <string name="elem_LED">LED</string>
  <string name="elem_LED_tt">用於可視化輸出訊號，僅接受 1 位值，當輸入為 1時燈被點亮。</string>
  <string name="elem_LED_pin_in">LED 輸入，僅接受 1 位值，當輸入為 1時燈被點亮。</string>
  <string name="elem_RGBLED">RGB-LED</string>
  <string name="elem_RGBLED_tt">RGB LED，其顏色通過3個輸入訊號控制，每個輸入表示一個顏色通道。</string>
  <string name="elem_RGBLED_pin_R">紅色通道</string>
  <string name="elem_RGBLED_pin_G">綠色通道</string>
  <string name="elem_RGBLED_pin_B">藍色通道</string>
  <string name="elem_In">輸入</string>
  <string name="elem_In_tt">可以通過鼠標交互操作輸入訊號。也用於連接子電路。
      當用於生成 CPLD 或 FPGA 程式碼時，用於為其賦值接腳編號。</string>
  <string name="elem_In_pin_out">給出連接到該輸入的值</string>
  <string name="elem_DipSwitch">DIP開關</string>
  <string name="elem_DipSwitch_tt">簡單的DIP開關，可以輸出高或低電平</string>
  <string name="elem_DipSwitch_pin_out">開關的輸出值</string>
  <string name="elem_Clock">時鐘輸入</string>
  <string name="elem_Clock_tt">時鐘訊號，可以通過即時時鐘進行控制。
      如果頻率大於50赫茲，導線的顏色將不會更新。如果沒有使用即時時鐘，可以通過鼠標單擊控制時鐘訊號。
      當生成 CPLD 或 FPGA 程式碼時，用於為其賦值接腳編號。</string>
  <string name="elem_Clock_pin_C">根據設定的時鐘頻率在0和1間切換</string>
  <string name="elem_Button">按鈕</string>
  <string name="elem_Button_tt">一個簡單按鍵，當釋放時回到其初始的狀態</string>
  <string name="elem_Button_pin_out">按鍵輸出訊號</string>
  <string name="elem_ButtonLED">帶有LED的按鈕</string>
  <string name="elem_ButtonLED_tt">一個簡單按鍵，當釋放時回到其初始的狀態。
      按鍵有一個LED，可以通過輸入訊號進行開關。</string>
  <string name="elem_ButtonLED_pin_out">按鍵輸出訊號</string>
  <string name="elem_ButtonLED_pin_in">控制LED的輸入訊號</string>
  <string name="elem_Text">Text</string>
  <string name="elem_Text_tt">顯示一段文字，其對電路模擬沒有影響，可以通過其屬性對話框修改文字內容。</string>
  <string name="elem_Rectangle">矩形</string>
  <string name="elem_Rectangle_tt">顯示一個矩形，其對電路模擬沒有影響。
      如果使用 - 作為標題，將不會顯示標題。</string>
  <string name="elem_Probe">探測器</string>
  <string name="elem_Probe_tt">測量值可以通過數據圖或測量表顯示，該元件可用於觀察子電路中的值。</string>
  <string name="elem_Probe_pin_in">需要測量的值</string>
  <string name="elem_LightBulb">燈泡</string>
  <string name="elem_LightBulb_tt">燈泡具有兩個連接點，當電流經過時燈泡變亮。
      不關心電流的方向。當輸入為不同的值時點亮，行為類似異OR 門。</string>
  <string name="elem_LightBulb_pin_A">連接點</string>
  <string name="elem_LightBulb_pin_B">連接點</string>
  <string name="elem_PolarityAwareLED">發光二極體</string>
  <string name="elem_PolarityAwareLED_tt">當陽極連接到高電平且陰極連接到低電平時，LED點亮。
      該LED不能用作下拉電阻。它僅充當顯示元素。圖中所示電阻僅表示需要串聯一個電阻來限流。</string>
  <string name="elem_PolarityAwareLED_pin_A">陽極</string>
  <string name="elem_PolarityAwareLED_pin_C">陰極</string>
  <string name="elem_Seven-Seg">7段數碼管</string>
  <string name="elem_Seven-Seg_tt">每段都有自己的控制輸入</string>
  <string name="elem_Seven-Seg_pin_a">該輸入控制頂部，水平線</string>
  <string name="elem_Seven-Seg_pin_b">該輸入控制頂部，右側，垂直線</string>
  <string name="elem_Seven-Seg_pin_c">該輸入控制底部，右側，垂直線</string>
  <string name="elem_Seven-Seg_pin_d">該輸入控制底部，水平線</string>
  <string name="elem_Seven-Seg_pin_e">該輸入控制底部，左側，垂直線</string>
  <string name="elem_Seven-Seg_pin_f">該輸入控制頂部，左側，垂直線</string>
  <string name="elem_Seven-Seg_pin_g">該輸入控制中間，水平線</string>
  <string name="elem_Seven-Seg_pin_dp">該輸入控制小數點</string>
  <string name="elem_Seven-Seg_pin_cc">共陰極，如果要點亮 LED，該輸入需為低電平</string>
  <string name="elem_Seven-Seg_pin_ca">共陽極，如果要點亮 LED，該輸入需為高電平</string>
  <string name="elem_Seven-Seg-Hex">7段數碼管(十六進制輸入)</string>
  <string name="elem_Seven-Seg-Hex_tt">4位十六進制輸入7段數碼管</string>
  <string name="elem_Seven-Seg-Hex_pin_d">將被顯示的輸入值</string>
  <string name="elem_Seven-Seg-Hex_pin_dp">該輸入控制小數點</string>
  <string name="elem_SixteenSeg">16段數碼管</string>
  <string name="elem_SixteenSeg_tt">通過16位輸入控制各段，第二個輸入控制小數點</string>
  <string name="elem_SixteenSeg_pin_led">16位驅動總線</string>
  <string name="elem_SixteenSeg_pin_dp">該輸入控制小數點</string>
  <string name="elem_LedMatrix">LED矩陣</string>
  <string name="elem_LedMatrix_tt">LED矩陣，在獨立視窗中顯示。
      通過一個數據字段控制一列LED的開關，另外一個輸入為當前列的位址。</string>
  <string name="elem_LedMatrix_pin_r-data">當前列對應的數據位字，自底向上</string>
  <string name="elem_LedMatrix_pin_c-addr">當前列位址</string>
  <string name="elem_Data">數據圖</string>
  <string name="elem_Data_tt">在電路面板顯示數據繪圖，可以繪制完整的時鐘周期或單個門改變，該元件不影響模擬。</string>
  <string name="elem_RotEncoder">旋轉編碼器</string>
  <string name="elem_RotEncoder_tt">帶旋轉編碼器的旋鈕，用於檢測旋轉運動。</string>
  <string name="elem_RotEncoder_pin_A">訊號A</string>
  <string name="elem_RotEncoder_pin_B">訊號B</string>
  <string name="elem_Keyboard">鍵盤</string>
  <string name="elem_Keyboard_tt">可以用於輸入文字的鍵盤。
      該元件快取輸入，然後讀取輸入作為輸出。</string>
  <string name="elem_Keyboard_pin_C">時鐘，上升沿時從緩沖中移除舊的字符</string>
  <string name="elem_Keyboard_pin_en">如果為高電平，則輸出 D 有效，輸出一個字符。同時使能時鐘輸入。</string>
  <string name="elem_Keyboard_pin_D">最後輸入的字符或0(如果沒有有效字符)，輸出為16位Java字符值</string>
  <string name="elem_Keyboard_pin_av">該輸出訊號表示字符有效，用於觸發中斷。</string>
  <string name="elem_Terminal">終端機</string>
  <string name="elem_Terminal_tt">可以想向終端機寫入ASCII字符，該終端機打開新的視窗並顯示輸出。</string>
  <string name="elem_Terminal_pin_C">時鐘，在上升沿將輸入訊號的值寫入終端機</string>
  <string name="elem_Terminal_pin_D">將要寫入終端機的數據</string>
  <string name="elem_Terminal_pin_en">高電平使能</string>
  <string name="elem_VGA">VGA顯示器</string>
  <string name="elem_VGA_tt">分析輸入視頻訊號並顯示對應圖形。
      因為模擬不能即時運行，除了視頻訊號，還需要像素時鐘。</string>
  <string name="elem_VGA_pin_R">紅色元件</string>
  <string name="elem_VGA_pin_G">綠色元件</string>
  <string name="elem_VGA_pin_B">藍色元件</string>
  <string name="elem_VGA_pin_H">水平同步訊號</string>
  <string name="elem_VGA_pin_V">垂直同步訊號</string>
  <string name="elem_VGA_pin_C">像素時鐘</string>
  <string name="elem_MIDI">MIDI</string>
  <string name="elem_MIDI_tt">使用 MIDI 系統播放記錄</string>
  <string name="elem_MIDI_pin_N">記錄</string>
  <string name="elem_MIDI_pin_V">音量</string>
  <string name="elem_MIDI_pin_OnOff">為1相當於按下按鍵，為0相當於釋放按鍵。</string>
  <string name="elem_MIDI_pin_en">使能</string>
  <string name="elem_MIDI_pin_PC">如果為高電平，使用 N 值改變程式(儀器)</string>
  <string name="elem_MIDI_pin_C">時鐘</string>
  <string name="elem_StepperMotorUnipolar">單極性步進電機</string>
  <string name="elem_StepperMotorUnipolar_tt">具有兩個限位開關的單極步進電機。支援全步驅動，半步驅動和細分(微步)驅動。</string>
  <string name="elem_StepperMotorUnipolar_pin_S0">限位開關0，當電機角度為 0° 時變為高電平</string>
  <string name="elem_StepperMotorUnipolar_pin_S1">限位開關1，當電機角度為 180° 時變為高電平</string>
  <string name="elem_StepperMotorUnipolar_pin_P0">相數 0</string>
  <string name="elem_StepperMotorUnipolar_pin_P1">相數 1</string>
  <string name="elem_StepperMotorUnipolar_pin_P2">相數 2</string>
  <string name="elem_StepperMotorUnipolar_pin_P3">相數 3</string>
  <string name="elem_StepperMotorBipolar">雙極性步進電機</string>
  <string name="elem_StepperMotorBipolar_tt">具有兩個限位開關的雙極步進電機。支援全步驅動，半步驅動和細分(微步)驅動。</string>
  <string name="elem_StepperMotorBipolar_pin_S0">限位開關0，當電機角度為 0° 時變為高電平</string>
  <string name="elem_StepperMotorBipolar_pin_S1">限位開關1，當電機角度為 180° 時變為高電平</string>
  <string name="elem_StepperMotorBipolar_pin_A+">線圈 A，正極</string>
  <string name="elem_StepperMotorBipolar_pin_A-">線圈 A，負極</string>
  <string name="elem_StepperMotorBipolar_pin_B+">線圈 B，正極</string>
  <string name="elem_StepperMotorBipolar_pin_B-">線圈 B，負極</string>
  <string name="elem_Ground">地</string>
  <string name="elem_Ground_tt">用於接地，輸出始終為 0</string>
  <string name="elem_Ground_pin_out">輸出始終為 0</string>
  <string name="elem_VDD">電源</string>
  <string name="elem_VDD_tt">用於連接電源，輸出始終為 1</string>
  <string name="elem_VDD_pin_out">輸出始終為 1</string>
  <string name="elem_Const">常量</string>
  <string name="elem_Const_tt">常量，值在屬性對話框設定</string>
  <string name="elem_Const_pin_out">返回常量設定值</string>
  <string name="elem_Tunnel">隧道</string>
  <string name="elem_Tunnel_tt">不使用導線實現元件連接。所有具有相同名稱的隧道網路被認為連接一起。
      僅在當前電路有效，不能用於不同電路。沒有名稱的隧道元件被忽略。</string>
  <string name="elem_Tunnel_pin_in">連接點</string>
  <string name="elem_Splitter">分裂器/合並器</string>
  <string name="elem_Splitter_tt">分裂訊號或建立總線。</string>
  <string name="elem_Splitter_pin_in">輸入位 {0}</string>
  <string name="elem_Splitter_pin_in_one">輸入位 {0}</string>
  <string name="elem_Splitter_pin_out">輸出位 {0}</string>
  <string name="elem_Splitter_pin_out_one">輸出位 {0}</string>
  <string name="elem_BusSplitter">雙向分裂器</string>
  <string name="elem_BusSplitter_tt">可用於數據總線特別是儲存器模塊的構建</string>
  <string name="elem_BusSplitter_pin_D_N">數據位 {0}</string>
  <string name="elem_PullUp">上拉電阻</string>
  <string name="elem_PullUp_pin_out">弱高電平</string>
  <string name="elem_PullUp_tt">如果一個網路為高阻態，該電阻將網路上拉到高電平，其它時候該元件無效。</string>
  <string name="elem_PullDown">下拉電阻</string>
  <string name="elem_PullDown_pin_out">弱低電平</string>
  <string name="elem_PullDown_tt">如果一個網路為高阻態，該電阻將網路下拉到低電平，其它時候該元件無效。</string>
  <string name="elem_Driver">驅動器</string>
  <string name="elem_Driver_tt">用於將訊號連接到其它導線。
      如果 sel 輸入為低電平，輸出為高阻狀態，如果 sel 為高電平，輸出等於輸入。</string>
  <string name="elem_Driver_pin_in">輸入</string>
  <string name="elem_Driver_pin_out">輸出</string>
  <string name="elem_Driver_pin_sel">控制位</string>
  <string name="elem_DriverInvSel">驅動器(低電平有效)</string>
  <string name="elem_DriverInvSel_tt">用於將訊號連接到其它導線。
      如果 sel 輸入為高電平，輸出為高阻狀態，如果 sel 為低電平，輸出等於輸入。</string>
  <string name="elem_DriverInvSel_pin_in">輸入</string>
  <string name="elem_DriverInvSel_pin_sel">控制位</string>
  <string name="elem_DriverInvSel_pin_out">輸出</string>
  <string name="elem_PinControl">雙向接腳</string>
  <string name="elem_PinControl_tt">該元件僅在生成 VHDL 或 Verilog 時有效，用於建立雙向埠。該元件只能在頂級電路使用。</string>
  <string name="elem_PinControl_pin_wr">待輸出數據</string>
  <string name="elem_PinControl_pin_oe">使能輸出</string>
  <string name="elem_PinControl_pin_rd">待讀取數據</string>
  <string name="elem_PinControl_pin_pin">實際接腳連接點，只有一個輸出可以連接到該埠</string>
  <string name="elem_Multiplexer">覆用器</string>
  <string name="elem_Multiplexer_tt">根據 sel 埠選擇哪個輸入可以通過</string>
  <string name="elem_Multiplexer_input">輸入埠 {0}</string>
  <string name="elem_Multiplexer_output">輸出</string>
  <string name="elem_Multiplexer_pin_sel">選擇埠</string>
  <string name="elem_Demultiplexer">多路分配器</string>
  <string name="elem_Demultiplexer_tt">根據 sel 將輸入值給到某個輸出埠</string>
  <string name="elem_Demultiplexer_pin_sel">選擇埠</string>
  <string name="elem_Demultiplexer_pin_in">輸入埠</string>
  <string name="elem_Demultiplexer_output">輸出埠 {0}</string>
  <string name="elem_Decoder">解碼器</string>
  <string name="elem_Decoder_tt">僅有一個選中的輸出埠為高電平，其它輸出為低電平.</string>
  <string name="elem_Decoder_output">輸出埠 {0}</string>
  <string name="elem_Decoder_pin_sel">選擇埠</string>
  <string name="elem_BitSelector">位選擇器</string>
  <string name="elem_BitSelector_tt">在數據總線中選擇某一位</string>
  <string name="elem_BitSelector_pin_in">輸入總線</string>
  <string name="elem_BitSelector_pin_sel">選擇埠</string>
  <string name="elem_BitSelector_pin_out">輸出埠</string>
  <string name="elem_PriorityEncoder">優先級編碼器</string>
  <string name="elem_PriorityEncoder_short">Priority</string>
  <string name="elem_PriorityEncoder_tt">當輸入只有一個為高電平時，其對應的值被輸出。
      當多個輸入為高電平時，輸出對應最大的值。</string>
  <string name="elem_PriorityEncoder_pin_num">輸入訊號對應的值</string>
  <string name="elem_PriorityEncoder_pin_any">如果該埠為高電平，則至少有一個輸入為高電平</string>
  <string name="elem_PriorityEncoder_input">輸入訊號 {0}</string>
  <string name="elem_RS_FF_AS">SR 觸發器</string>
  <string name="elem_RS_FF_AS_short">SR</string>
  <string name="elem_RS_FF_AS_tt">用於儲存 1 位數據。通過置位和復位來設定儲存的數據。
      如果輸入同時為高電平，輸出全為低電平。如果輸入同時為低電平，輸出狀態隨機。</string>
  <string name="elem_RS_FF_AS_pin_S">置位</string>
  <string name="elem_RS_FF_AS_pin_R">復位</string>
  <string name="elem_RS_FF_AS_pin_Q">返回儲存的值</string>
  <string name="elem_RS_FF_AS_pin_~Q">返回翻轉後的儲存值</string>
  <string name="elem_RS_FF">SR 觸發器(時鐘控制)</string>
  <string name="elem_RS_FF_short">SR</string>
  <string name="elem_RS_FF_tt">用於儲存 1 位數據。通過置位和復位來設定儲存的數據。
      如果輸入在時鐘上升沿同時為低電平，輸出狀態隨機。</string>
  <string name="elem_RS_FF_pin_S">置位</string>
  <string name="elem_RS_FF_pin_C">時鐘輸入，在上升沿狀態轉換</string>
  <string name="elem_RS_FF_pin_R">復位</string>
  <string name="elem_RS_FF_pin_Q">返回儲存的值</string>
  <string name="elem_RS_FF_pin_~Q">返回翻轉後的儲存值</string>
  <string name="elem_JK_FF">JK 觸發器</string>
  <string name="elem_JK_FF_short">JK</string>
  <string name="elem_JK_FF_tt">可以儲存(J=K=0), 置位(J=1, K=0), 復位(J=0, K=1)或翻轉(J=K=1)儲存的內容。
      狀態轉換僅在時鐘上升沿發生。</string>
  <string name="elem_JK_FF_pin_J">置位</string>
  <string name="elem_JK_FF_pin_C">時鐘輸入，在上升沿狀態轉換</string>
  <string name="elem_JK_FF_pin_K">復位</string>
  <string name="elem_JK_FF_pin_Q">返回儲存的值</string>
  <string name="elem_JK_FF_pin_~Q">返回翻轉後的儲存值</string>
  <string name="elem_D_FF">D 觸發器</string>
  <string name="elem_D_FF_short">D</string>
  <string name="elem_D_FF_tt">接腳 D 的值在時鐘上升沿被儲存。可以設定位寬以允許儲存多位數據。</string>
  <string name="elem_D_FF_pin_D">輸入</string>
  <string name="elem_D_FF_pin_C">時鐘</string>
  <string name="elem_D_FF_pin_Q">返回儲存的值</string>
  <string name="elem_D_FF_pin_~Q">返回翻轉後的儲存值</string>
  <string name="elem_T_FF">T 觸發器</string>
  <string name="elem_T_FF_short">T</string>
  <string name="elem_T_FF_tt">儲存一位，在時鐘上升沿切換狀態。</string>
  <string name="elem_T_FF_pin_T">使能狀態切換</string>
  <string name="elem_T_FF_pin_C">時鐘輸入</string>
  <string name="elem_T_FF_pin_Q">返回儲存的值</string>
  <string name="elem_T_FF_pin_~Q">返回翻轉後的儲存值</string>
  <string name="elem_JK_FF_AS">JK 觸發器(異步)</string>
  <string name="elem_JK_FF_AS_short">JK-AS</string>
  <string name="elem_D_FF_AS">D 觸發器(異步)</string>
  <string name="elem_D_FF_AS_short">D-AS</string>
  <string name="elem_Monoflop">單穩態觸發器</string>
  <string name="elem_Monoflop_short">Mono</string>
  <string name="elem_Register">暫存器</string>
  <string name="elem_Register_short">Reg</string>
  <string name="elem_ROM">ROM</string>
  <string name="elem_BlockRAMDualPort_short">RAM</string>
  <string name="elem_EEPROMDualPort_short">EEPROM</string>
  <string name="elem_PFET">P 通道場效應晶體管</string>
  <string name="elem_FGNFET">N 通道浮動門場效應晶體管</string>
  <string name="elem_Testcase">測試用例</string>
  <string name="elem_Testcase_tt">用於定義測試用例，可用於自動檢測電路的行為是否符合定義。</string>
  <string name="elem_AsyncSeq">異步時序</string>
  <string name="elem_AsyncSeq_tt">允許設定異步時序電路如Muller流水線的時序。</string>
  <string name="elem_PowerSupply">電源連接器</string>
  <string name="elem_Reset">復位器</string>
  <string name="elem_Reset_pin_Reset">復位輸出</string>
  <string name="elem_Break">Break</string>
  <string name="elem_Break_pin_brk">如果檢測到上升沿則停止模擬</string>
  <string name="elem_External">External</string>
  <string name="elem_External_tt">通過執行外部程式計算邏輯值。用於通過 VHDL 或 Verilog 定義元件行為。
      實際的模擬行為由外部模擬器完成。目前支援 VHDL 模擬器 ghdl 和 verilog 模擬器 Icarus Verilog。
      元件的名稱必須和模塊名稱一致！</string>
  <string name="elem_Diode">二極體</string>
  <string name="error">錯誤</string>
  <string name="err_N_isNotInputOrOutput">元件 {1} 的接腳 {0} 不是輸入或輸出</string>
  <string name="err_aSingleClockNecessary">需要唯一的時鐘元件，所有的觸發器必須使用該唯一時鐘訊號。</string>
  <string name="err_analyseNoInputs">電路包含沒有標簽的輸入埠</string>
  <string name="err_analyseNoOutputs">電路包含沒有標簽的輸出埠</string>
  <string name="err_builder_exprNotSupported">不支援運算式 {0}</string>
  <string name="err_builder_operationNotSupported">不支援操作 {0}</string>
  <string name="err_builder_couldNotFillLUT">建立查詢表時遇到錯誤</string>
  <string name="err_burnError">在一條導線上存在多於一個輸出訊號導致短路。</string>
  <string name="err_pullUpAndDown">不能將上拉和下拉電阻連接到同一網路</string>
  <string name="err_cannotAnalyse_N">不能分析結點 {0}</string>
  <string name="err_containsVarAndNotVar">包含 [var] 和 [not var]</string>
  <string name="err_duplicatePinLabel">接腳 ''{0}'' 在元件 ''{1}'' 中重覆</string>
  <string name="err_element_N_notFound">未發現元件 {0}</string>
  <string name="err_ffNeedsToBeConnectedToClock">觸發器必須連接到時鐘訊號</string>
  <string name="err_invalidFileFormat">檔案格式無效</string>
  <string name="err_isAlreadyInitialized">邏輯值已經初始化</string>
  <string name="err_labelNotConnectedToNet_N">隧道元件 {0} 未連接！</string>
  <string name="err_moreThanOneClockFound">多於一個時鐘訊號</string>
  <string name="err_clockIsNotUsed">時鐘元件未使用！</string>
  <string name="err_needs_N0_bits_found_N2_bits">需要 {0} 位，但只有 {1}</string>
  <string name="err_netOfPin_N_notFound">找不到接腳 {0} 的網路</string>
  <string name="err_noClockFound">找不到時鐘</string>
  <string name="key_AddrBits">位址位數</string>
  <string name="key_AddrBits_tt">位址線位數</string>
  <string name="key_Bits">數據位數</string>
  <string name="key_Bits_tt">數據線位數</string>
  <string name="key_Color">顏色</string>
  <string name="key_Color_tt">元件的顏色</string>
  <string name="key_backgroundColor">背景色</string>
  <string name="key_backgroundColor_tt">當嵌入其它電路時的電路背景色</string>
  <string name="key_Cycles">超時周期</string>
  <string name="key_Cycles_tt">如果設定的周期數完成而沒有中斷訊號則會報錯。</string>
  <string name="key_Data">數據</string>
  <string name="key_Data_tt">儲存在該元件中的值</string>
  <string name="key_Default">預設</string>
  <string name="key_Default_tt">電路模擬開始時的預設值。</string>
  <string name="key_InDefault">預設值</string>
  <string name="key_InDefault_tt">電路模擬啟動時的預設值，"Z" 表示高阻狀態。</string>
  <string name="key_isHighZ">允許三態輸入</string>
  <string name="key_isHighZ_tt">如果勾選，則輸入訊號允許高阻狀態，其控制輸入元件的預設值是否可以設為 "Z"</string>
  <string name="key_avoidActiveLow">非零輸出</string>
  <string name="key_Description">簡介</string>
  <string name="key_Description_tt">關於該元件和其使用的簡短描述</string>
  <string name="key_Frequency">頻率/赫茲</string>
  <string name="key_Frequency_tt">即時時鐘頻率</string>
  <string name="key_IEEEShapes">使用 IEEE 91-1984 外觀</string>
  <string name="key_IEEEShapes_tt">使用 IEEE 91-1984 形狀代替矩形</string>
  <string name="key_Inputs">輸入埠數</string>
  <string name="key_Inputs_tt">輸入埠個數，所有的輸入埠都必須被連接。</string>
  <string name="key_Label">標簽</string>
  <string name="key_Label_tt">該元件的名稱</string>
  <string name="key_Size">大小</string>
  <string name="key_Size_tt">形狀大小</string>
  <string name="key_Language">語言</string>
  <string name="key_Language_tt">圖形界面的語言，需要重啟才能生效</string>
  <string name="key_NetName">網路名稱</string>
  <string name="key_NetName_tt">所有具有相同名稱的網路連在一起。</string>
  <string name="key_InputSplitting">輸入分割</string>
  <string name="key_intFormat">數位格式</string>
  <string name="key_intFormat_tt">顯示數位的格式</string>
  <string name="key_barrelShifterMode">模式</string>
  <string name="key_direction">方向</string>
  <string name="key_direction_tt">設定方向</string>
  <string name="key_direction_left">左</string>
  <string name="key_direction_right">右</string>
  <string name="key_maxStepCount">最大顯示步數</string>
  <string name="key_maxStepCount_tt">儲存值的最大數，如果達到最大數，舊的值將被忽略。</string>
  <string name="key_rotation">旋轉</string>
  <string name="key_rotation_tt">元件在電路中的旋轉角度</string>
  <string name="key_mirror">鏡像</string>
  <string name="key_mirror_tt">鏡像元件</string>
  <string name="key_runRealTime">使用即時時鐘</string>
  <string name="key_runRealTime_tt">如果選中，當電路開始模擬時將使用即時時鐘</string>
  <string name="key_showDataGraph">模擬啟動時顯示測量圖</string>
  <string name="key_showDataGraph_tt">當模擬開始時，包含測量值的圖形將被顯示。</string>
  <string name="key_addValueToGraph">在測量圖中顯示</string>
  <string name="key_addValueToGraph_tt">在測量圖中顯示值</string>
  <string name="key_showDataTable">在模擬開始時顯示測量值</string>
  <string name="key_showDataTable_tt">當模擬開始時，包含測量值的表將被顯示。</string>
  <string name="key_termHeight">行數</string>
  <string name="key_termHeight_tt">顯示的行數</string>
  <string name="key_termWidth">每行字符數</string>
  <string name="key_termWidth_tt">每行字符數</string>
  <string name="key_valueIsProbe">作為測量值</string>
  <string name="key_valueIsProbe_tt">如果選中，該值將作為測量值在測量圖和數據表中顯示。此時，必須指定標簽作為值的標識。</string>
  <string name="key_Testdata">測試數據</string>
  <string name="key_graphicWidth">寬度(像素)</string>
  <string name="key_graphicWidth_tt">使用像素描述的螢幕寬度</string>
  <string name="key_graphicHeight">高度(像素)</string>
  <string name="key_graphicHeight_tt">使用像素描述的螢幕高度</string>
  <string name="key_isProgramMemory">可編程儲存器</string>
  <string name="key_isProgramMemory_tt">設定 ROM 為可編程儲存器，這樣就可以通過外部 IDE 訪問。</string>
  <string name="key_isProgramCounter">程式計數器</string>
  <string name="key_Blown">已編程</string>
  <string name="key_Blown_tt">如果選中，二極體(熔絲)為已燒寫，浮動門場效應晶體管為已充電。
      可以通過快捷鍵 ‘p’ 修改設定。</string>
  <string name="key_ExpressionFormat">格式</string>
  <string name="key_ExpressionFormat_tt">運算式格式</string>
  <string name="key_commonCathode">共極性</string>
  <string name="key_commonCathode_tt">如果設定，將會模擬共陰極或共陽極</string>
  <string name="key_commonConnectionType">共</string>
  <string name="key_commonConnectionType_tt">共極性</string>
  <string name="key_commonConnectionType_cathode">陰極</string>
  <string name="key_commonConnectionType_anode">陽極</string>
  <string name="key_ledPersistence">避免閃爍</string>
  <string name="key_atf1502Fitter_tt">包含Microchip(ATMEL)fit15xx.exe 檔案的路徑</string>
  <string name="key_pin">接腳編號</string>
  <string name="key_pin_tt">為空表示該訊號不會被分配給某個接腳</string>
  <string name="key_rowDataBits">行數</string>
  <string name="key_rowDataBits_tt">行數</string>
  <string name="key_colAddrBits">列位址位數</string>
  <string name="key_colAddrBits_tt">單個列的位址，3位表示8列。</string>
  <string name="key_lockedMode">電路被鎖定</string>
  <string name="key_lockedMode_tt">電路被鎖定</string>
  <string name="key_pinNumber">接腳編號</string>
  <string name="key_pinNumber_tt">接腳的編號，用於表示電路的 DIL 封裝和生成 CPLD 程式碼時分配接腳。
      如果具有多位，所有的接腳編號可以表示為逗號分割清單。</string>
  <string name="key_pinCount">接腳數</string>
  <string name="key_pinCount_tt">接腳數，0表示自動確定接腳數</string>
  <string name="key_defTreeSelect">應用啟動時顯示元件樹</string>
  <string name="key_defTreeSelect_tt">如果選中，應用啟動時會在左側顯示元件樹</string>
  <string name="key_inverterConfig">翻轉輸入</string>
  <string name="key_inverterConfig_tt">選擇需要翻轉的輸入訊號</string>
  <string name="key_fontSize">列表字體大小(百分比)</string>
  <string name="key_fontSize_tt">列表字體大小，相對於預設大小的百分比</string>
  <string name="key_withEnable">允許輸入</string>
  <string name="key_withEnable_tt">如果設定，將使能輸入埠 T</string>
  <string name="key_unidirectional">單向</string>
  <string name="key_libraryPath">庫</string>
  <string name="key_libraryPath_tt">包含預定義的子電路，還可以在當前路徑下添加自定義電路。</string>
  <string name="key_grid">顯示柵格</string>
  <string name="key_grid_tt">在主視窗中顯示柵格</string>
  <string name="key_wireToolTips">導線提示</string>
  <string name="key_wireToolTips_tt">如果選中，當鼠標劃過時導線會高亮</string>
  <string name="key_mapToKey">映射到鍵盤</string>
  <string name="key_mapToKey_tt">按鈕被映射的鍵盤。使用 UP, DOWN, LEFT 或者 RIGHT 作為標簽以使用方向鍵。</string>
  <string name="key_jarPath">Java 庫</string>
  <string name="key_jarPath_tt">使用java實現的額外元件jar檔案。</string>
  <string name="key_showWireBits">在總線上顯示導線數。</string>
  <string name="key_showWireBits_tt">注意：值僅在模擬啟動後更新。</string>
  <string name="key_inputBits">輸入位寬</string>
  <string name="key_inputBits_tt">輸出位寬必須大於輸入位寬</string>
  <string name="key_outputBits">輸出位寬</string>
  <string name="key_outputBits_tt">輸出位寬必須大於輸入位寬</string>
  <string name="key_textFontSize">字體大小</string>
  <string name="key_textFontSize_tt">設定文字字體大小</string>
  <string name="key_delayTime">時長</string>
  <string name="key_delayTime_tt">延遲時間，單位為常見門的傳輸延遲。</string>
  <string name="key_invertOutput">翻轉輸出</string>
  <string name="key_invertOutput_tt">如果選中，輸出將被翻轉。</string>
  <string name="key_timerDelay">脈沖寬度</string>
  <string name="key_timerDelay_tt">用時鐘周期表示的脈沖寬度</string>
  <string name="key_splitterSpreading">間距</string>
  <string name="key_splitterSpreading_tt">設定輸入和輸出埠間距</string>
  <string name="key_romContent">ROM 內容</string>
  <string name="key_romContent_tt">所有使用的 ROM 中的內容</string>
  <string name="key_applicationType">應用</string>
  <string name="key_applicationType_tt">定義使用哪個應用</string>
  <string name="key_applicationType_Generic">通用</string>
  <string name="key_externalInputs">輸入</string>
  <string name="key_externalOutputs">輸出</string>
  <string name="key_Code">程式程式碼</string>
  <string name="key_Code_tt">被外部應用執行的程式程式碼</string>
  <string name="attr_panel_Options">選項</string>
  <string name="key_ghdlPath">GHDL</string>
  <string name="key_ghdlOptions">GHDL 選項</string>
  <string name="key_ghdlOptions_tt">用於處理 GHDL 的選項</string>
  <string name="key_iverilogPath_tt">Icarus verilog 安裝路徑</string>
  <string name="key_maxValue">最大值</string>
  <string name="key_maxValue_tt">如果為 0，則使用可能的最大值</string>
  <string name="key_dipDefault">輸出為高電平</string>
  <string name="key_dipDefault_tt">預設輸出</string>
  <string name="key_macMouse">使用 MacOS 鼠標單擊</string>
  <string name="key_macMouse_tt">使用 CTRL+左鍵 代替右鍵單擊。</string>
  <string name="key_tunnelRenameDialog">顯示自動重命名隧道元件對話框</string>
  <string name="key_tunnelRenameDialog_tt">如果選中，當一個隧道元件被重命名後，將會顯示為同名隧道元件自動重命名的對話框。</string>
  <string name="key_ATMISP_tt">可執行檔案ATMISP.exe的路徑。設定後，ATMISP 軟體可以被自動啟動！</string>
  <string name="key_customShape">自定義形狀</string>
  <string name="key_customShape_tt">匯入 SVG 檔案</string>
  <string name="key_preloadProgram">在啟動時預加載程式到儲存器</string>
  <string name="key_preloadProgram_tt">當模擬一個使用 RAM 作為程式儲存器的處理器時，因為 RAM 內容被初始化為零，因此很難啟動處理器。
      該設定允許在處理器啟動時加載數據到程式儲存器。</string>
  <string name="key_preloadProgramFile">程式檔案</string>
  <string name="key_preloadProgramFile_tt">在模擬開始時被自動加載進儲存器的程式檔案</string>
  <string name="key_RectWidth">寬</string>
  <string name="key_RectWidth_tt">以柵格為單位的寬度</string>
  <string name="key_RectHeight">高</string>
  <string name="key_RectHeight_tt">以柵格為單位的高度</string>
  <string name="key_RectInside">內置文字</string>
  <string name="key_RectInside_tt">將文字放在矩形內部</string>
  <string name="key_RectBottom">底部文字</string>
  <string name="key_RectBottom_tt">將文字放在矩形底部</string>
  <string name="key_RectRight">右側文字</string>
  <string name="key_RectRight_tt">將文字放在矩形右側</string>
  <string name="key_wideShape">寬形</string>
  <string name="key_wideShape_tt">使用較寬的形狀顯示門</string>
  <string name="key_shapeType">形狀</string>
  <string name="key_shapeType_tt">當電路作為子電路時的形狀。
      “Simple” 模式：輸入接腳顯示在一個簡單矩形左側，輸出接腳顯示在一個簡單矩形右側。
      “Layout” 模式：接腳的位置由實際電路中輸入、輸出元件的位置和方向決定。此時，接腳可以位於頂部或底部。
      “DIL-Chip”模式：使用雙列直插封裝外形顯示電路，輸入、輸出元件的接腳編號決定接腳的位置。</string>
  <string name="key_shapeType_DEFAULT">預設</string>
  <string name="key_shapeType_CUSTOM">自定義</string>
  <string name="key_textOrientation">文字對齊</string>
  <string name="key_textOrientation_tt">文字對齊方式</string>
  <string name="key_textOrientation_LEFTBOTTOM">左下角</string>
  <string name="key_textOrientation_CENTERBOTTOM">居中偏下</string>
  <string name="key_textOrientation_RIGHTBOTTOM">右下角</string>
  <string name="key_textOrientation_RIGHTCENTER">居中偏右</string>
  <string name="key_textOrientation_RIGHTTOP">右上角</string>
  <string name="key_textOrientation_CENTERTOP">居中偏上</string>
  <string name="key_textOrientation_LEFTTOP">左上角</string>
  <string name="key_textOrientation_LEFTCENTER">居中偏左</string>
  <string name="key_textOrientation_CENTERCENTER">正中</string>
  <string name="key_enabled">啟用</string>
  <string name="key_enabled_tt">啟用或禁用該元件</string>
  <string name="key_toolChainConfig">工具鏈設定</string>
  <string name="key_toolChainConfig_tt">用於設定集成工具鏈，如啟動外部工具，對 FPGA 進行編程</string>
  <string name="key_generic">通用參數</string>
  <string name="key_generic_tt">通用化電路的程式碼</string>
  <string name="key_isGeneric">通用電路</string>
  <string name="key_isGeneric_tt">建立一個通用電路</string>
  <string name="key_showTutorial">啟動時顯示使用指南</string>
  <string name="key_showTutorial_tt">開啟使用指南</string>
  <string name="menu_exportSVGSettings">SVG 導出設定</string>
  <string name="key_SVG_hideTest">隱藏測試用例</string>
  <string name="key_SVG_hideTest__">不導出測試用例</string>
  <string name="key_SVG_noShapeFilling">不填充形狀</string>
  <string name="key_SVG_noShapeFilling_tt">多邊形不會被填充</string>
  <string name="key_SVG_smallIO_tt">輸入和輸出表示為小圓圈。</string>
  <string name="key_SVG_noPinMarker">忽略接腳標注</string>
  <string name="key_SVG_noPinMarker_tt">符號中藍色和紅色的接腳標注會被忽略。</string>
  <string name="key_SVG_highContrast">高對比度</string>
  <string name="key_SVG_highContrast_tt">導線和接腳的文字顯示為黑色。</string>
  <string name="key_SVG_monochrome">單色</string>
  <string name="key_SVG_monochrome_tt">僅使用灰色。</string>
  <string name="key_SVG_thinnerLines">細線</string>
  <string name="key_SVG_thinnerLines_tt">如果選中，繪制的線會比較細</string>
  <string name="key_snapToGrid">對齊到柵格</string>
  <string name="key_snapToGrid_tt">如果選中，元件將會和柵格對齊。</string>
  <string name="key_layoutShapeDelta">接腳間距</string>
  <string name="key_layoutShapeDelta_tt">用於 layout 外觀，設定和前一個接腳的距離。</string>
  <string name="mod_insertWire">插入導線</string>
  <string name="mod_insertCopied">從剪下板插入</string>
  <string name="mod_setKey_N0_in_element_N1">元件 ''{1}'' 中的 ''{0}'' 值被修改</string>
  <string name="mod_setAttributesIn_N">修改元件 ''{0}'' 屬性</string>
  <string name="mod_wireDeleted">刪除導線</string>
  <string name="mod_movedOrRotatedElement_N">移動或旋轉元件 ''{0}''</string>
  <string name="mod_movedWire">移動導線</string>
  <string name="mod_deletedSelection">刪除選中</string>
  <string name="mod_insertedElement_N">插入元件 ''{0}''</string>
  <string name="mod_deletedElement_N">刪除元件 ''{0}''</string>
  <string name="mod_insertedWire">插入導線</string>
  <string name="mod_movedSelected">移動選中元件</string>
  <string name="mod_undo_N">復原: {0}</string>
  <string name="mod_redo_N">恢復: {0}</string>
  <string name="mod_circuitAttrModified">修改電路屬性</string>
  <string name="mod_modifiedMeasurementOrdering">排序測量值</string>
  <string name="mod_groupEdit">修改所選元件屬性</string>
  <string name="mod_splitWire">分割單個導線為兩個</string>
  <string name="lib_Logic">邏輯</string>
  <string name="lib_arithmetic">運算器</string>
  <string name="lib_flipFlops">觸發器</string>
  <string name="lib_io">輸入輸出</string>
  <string name="lib_memory">儲存器</string>
  <string name="lib_mux">覆用器</string>
  <string name="lib_wires">導線</string>
  <string name="lib_switching">開關</string>
  <string name="lib_displays">顯示</string>
  <string name="lib_mechanic">機械</string>
  <string name="lib_peripherals">外設</string>
  <string name="lib_misc">其他</string>
  <string name="lib_more">更多</string>
  <string name="menu_window">視窗</string>
  <string name="menu_about">關於</string>
  <string name="menu_analyse">分析</string>
  <string name="menu_analyse_tt">分析當前電路</string>
  <string name="menu_cut">剪下</string>
  <string name="menu_copy">複製</string>
  <string name="menu_custom">自定義</string>
  <string name="menu_library">庫</string>
  <string name="menu_delete">刪除元件</string>
  <string name="menu_delete_tt">刪除選中的元件</string>
  <string name="menu_edit">編輯</string>
  <string name="menu_editAttributes">設定當前電路</string>
  <string name="menu_editAttributes_tt">該電路設定影響當前打開電路的行為，例如當電路作為子電路被其他電路使用時的形狀，
      這些設定和電路檔案儲存在一起。</string>
  <string name="menu_editSettings">設定</string>
  <string name="menu_editSettings_tt">全局設定，包括模擬器、界面語言、符號、外部工具等。</string>
  <string name="menu_element">停止模擬</string>
  <string name="menu_element_tt">停止模擬並允許編輯電路。</string>
  <string name="menu_elements">元件</string>
  <string name="menu_export">導出</string>
  <string name="menu_exportPNGLarge">導出 PNG(大)</string>
  <string name="menu_exportPNGSmall">導出 PNG(小)</string>
  <string name="menu_exportSVG">導出 SVG</string>
  <string name="menu_exportAnimatedGIF">導出 GIF 動畫</string>
  <string name="menu_fast">運行至中斷</string>
  <string name="menu_fast_tt">運行電路直至中斷(BRK)元件檢測到斷點。</string>
  <string name="menu_file">檔案</string>
  <string name="menu_help">幫助</string>
  <string name="menu_update">更新</string>
  <string name="menu_update_tt">更新元件列表。</string>
  <string name="menu_maximize">適合視窗</string>
  <string name="menu_micro">單門模擬</string>
  <string name="menu_micro_tt">使用單步模式運行電路</string>
  <string name="menu_new">新建</string>
  <string name="menu_new_tt">新建一個空電路</string>
  <string name="menu_newSub">新建子電路</string>
  <string name="menu_newSub_tt">打開新視窗並建立一個子電路，然後可以在當前電路中使用該子電路</string>
  <string name="menu_open">打開</string>
  <string name="menu_openRecent">打開最近使用</string>
  <string name="menu_openRecentNewWindow">在新視窗打開最近使用</string>
  <string name="menu_openWin">在新視窗中打開</string>
  <string name="menu_openWin_tt">在新視窗中打開電路</string>
  <string name="menu_orderInputs">排序輸入訊號</string>
  <string name="menu_orderInputs_tt">排序輸入訊號(作為子電路使用時)</string>
  <string name="menu_orderMeasurements">排序測量值訊號</string>
  <string name="menu_orderMeasurements_tt">排序在圖形和表格視圖中的測量值訊號</string>
  <string name="menu_orderOutputs">排序輸出訊號</string>
  <string name="menu_orderOutputs_tt">排序輸出訊號(作為子電路使用時)</string>
  <string name="menu_paste">貼上</string>
  <string name="menu_rotate">旋轉</string>
  <string name="menu_sim">模擬</string>
  <string name="menu_run">啟動模擬</string>
  <string name="menu_run_tt">啟動模擬電路</string>
  <string name="menu_save">儲存</string>
  <string name="menu_saveAs">另存為</string>
  <string name="menu_saveData">儲存數據</string>
  <string name="menu_saveData_tt">儲存數據為 CSV 檔案</string>
  <string name="menu_speedTest">電路速度測試</string>
  <string name="menu_speedTest_tt">通過計算最大時鐘頻率進行運算速度測試</string>
  <string name="menu_step">單門步進</string>
  <string name="menu_step_tt">運行單個門</string>
  <string name="menu_runToBreakMicro">運行至中斷</string>
  <string name="menu_runToBreakMicro_tt">執行所有的單門步驟直至中斷元件檢測到上升沿。
    如果沒有中斷元件，則執行剩余所有單門步驟。</string>
  <string name="menu_synthesise">綜合</string>
  <string name="menu_synthesise_tt">為真值表生成最簡布爾運算式</string>
  <string name="menu_table_N_variables">{0} 變數</string>
  <string name="menu_table_create">建立</string>
  <string name="menu_table_createCircuit">電路</string>
  <string name="menu_table_createCircuit_tt">根據真值表建立對應電路</string>
  <string name="menu_table_createCircuitJK">基於 JK 觸發器的電路</string>
  <string name="menu_table_createCircuitJK_tt">使用 JK 觸發器電路表示真值表</string>
  <string name="menu_table_createCircuitLUT">基於查詢表的電路</string>
  <string name="menu_table_createCircuitLUT_tt">使用查詢表電路表示真值表</string>
  <string name="menu_table_createNAnd">基於與NOT 門的電路</string>
  <string name="menu_table_createNAndTwo">基於2輸入與NOT 門的電路</string>
  <string name="menu_table_createNAndTwo_tt">僅使用2輸入與NOT 門建立電路</string>
  <string name="menu_table_createNAnd_tt">僅使用與NOT 門電路表示真值表</string>
  <string name="menu_table_createNOr">基於或NOT 門的電路</string>
  <string name="menu_table_createNOrTwo">基於2輸入或NOT 門的電路</string>
  <string name="menu_table_createNOrTwo_tt">僅使用2輸入或NOT 門建立電路</string>
  <string name="menu_table_createNOr_tt">僅使用或NOT 門電路表示真值表</string>
  <string name="menu_table_create_hardware">器件</string>
  <string name="menu_table_create_jedec_tt">為器件建立 JEDEC 檔案</string>
  <string name="menu_table_exportTableLaTeX">導出 LaTeX</string>
  <string name="menu_table_createFunctionFixture">導出測試用例</string>
  <string name="menu_table_createFunctionFixture_tt">建立用於測試用例的描述</string>
  <string name="menu_table_createFunctionFixture_isSequential">測試用例僅在電路為純組合電路時可用</string>
  <string name="menu_table_exportHex">十六進制</string>
  <string name="menu_table_exportHex_tt">可用將十六進制檔案載入 ROM 或查詢表</string>
  <string name="menu_table_new">新建</string>
  <string name="menu_table_new_combinatorial">組合電路</string>
  <string name="menu_table_new_sequential">時序電路</string>
  <string name="menu_table_new_sequential_bidir">雙向時序電路</string>
  <string name="menu_table_reorder_inputs">重新排序或刪除輸入變數</string>
  <string name="menu_table_reorder_outputs">重新排序或刪除輸出列</string>
  <string name="menu_table_columnsAdd">添加輸出列</string>
  <string name="menu_table_columnsAdd_tt">在表中添加新的結果列</string>
  <string name="menu_table_columnsAddVariable">添加輸入變數</string>
  <string name="menu_table_columnsAddVariable_tt">在表中添加新的輸入變數</string>
  <string name="menu_table_setXTo0">將 X 設為 0</string>
  <string name="menu_table_setXTo0_tt">將 Don't Cares 設為 0</string>
  <string name="menu_table_setXTo1">將 X 設為 1</string>
  <string name="menu_table_setXTo1_tt">將 Don't Cares 設為 1</string>
  <string name="menu_table_JK">建立 J/K 運算式</string>
  <string name="menu_table_setAllToX">將值全部設為 X</string>
  <string name="menu_table_setAllToX_tt">將值全部設為 "don't care"</string>
  <string name="menu_table_setAllTo0">將值全部設為 0</string>
  <string name="menu_table_setAllTo0_tt">將值全部設為 0</string>
  <string name="menu_table_setAllTo1">將值全部設為 1</string>
  <string name="menu_table_setAllTo1_tt">將值全部設為 1</string>
  <string name="menu_table_invert">翻轉所有位</string>
  <string name="menu_table_invert_tt">將 "1" 變為 "0"，"0" 變為 "1"，Don't cares保持不變。</string>
  <string name="menu_table_showAllSolutions">顯示結果對話框</string>
  <string name="menu_table_showAllSolutions_tt">如果結果對話框被手動關閉，則重新顯示。</string>
  <string name="menu_terminalDelete">刪除</string>
  <string name="menu_terminalDelete_tt">刪除終端機內容</string>
  <string name="menu_view">視圖</string>
  <string name="menu_zoomIn">放大</string>
  <string name="menu_zoomOut">縮小</string>
  <string name="menu_expression">運算式</string>
  <string name="menu_expression_tt">從運算式建立電路</string>
  <string name="menu_runTests">運行測試用例(當前電路)</string>
  <string name="menu_runTests_tt">運行當前電路中的所有測試用例</string>
  <string name="menu_actualToDefault">設定預設輸入訊號</string>
  <string name="menu_actualToDefault_tt">將當前實際輸入值設為預設輸入值</string>
  <string name="menu_restoreAllFuses">重置二級管和浮動柵場效應晶體管狀態</string>
  <string name="menu_restoreAllFuses_tt">將所有二極體(熔絲)和浮動柵場效應晶體管設為 "非編程" 狀態，實際的設定將會丟失。</string>
  <string name="menu_help_elements">元件資訊</string>
  <string name="menu_help_elements_tt">顯示可用元件清單</string>
  <string name="menu_viewHelp">幫助對話框</string>
  <string name="menu_viewHelp_tt">顯示描述當前電路的幫助對話框</string>
  <string name="menu_insertAsNew">在新視窗貼上</string>
  <string name="menu_insertAsNew_tt">在新視窗貼上剪下板內容</string>
  <string name="menu_treeSelect">元件樹視圖</string>
  <string name="menu_treeSelect_tt">在左側以樹視圖顯示可用元件</string>
  <string name="menu_special">針對 74xx 電路的功能</string>
  <string name="menu_addPrefix">添加輸入輸出訊號前綴</string>
  <string name="menu_removePrefix">移除輸入輸出訊號前綴</string>
  <string name="menu_removePrefix_tt">移除輸入輸出訊號標簽的第一個字符</string>
  <string name="menu_numbering">接腳向導</string>
  <string name="menu_numbering_tt">為輸入和輸出訊號添加接腳編號向導</string>
  <string name="menu_removePinNumbers">移除接腳編號</string>
  <string name="menu_removePinNumbers_tt">移除電路中所有接腳編號</string>
  <string name="menu_undo">復原</string>
  <string name="menu_undo_tt">還原上次修改</string>
  <string name="menu_redo">重做</string>
  <string name="menu_redo_tt">再次應用上一次還原的修改</string>
  <string name="menu_showDataAsGraph">顯示圖</string>
  <string name="menu_showDataAsGraph_tt">以圖方式顯示數據</string>
  <string name="menu_showDataAsTable">顯示表格</string>
  <string name="menu_showDataAsTable_tt">以表格方式顯示值數據</string>
  <string name="menu_addPowerSupply">添加電源</string>
  <string name="menu_addPowerSupply_tt">為電路添加電源</string>
  <string name="menu_exportVHDL">導出 VHDL</string>
  <string name="menu_exportVHDL_tt">導出電路為 VHDL</string>
  <string name="menu_exportVerilog">導出 Verilog</string>
  <string name="menu_exportVerilog_tt">-導出電路為 Verilog</string>
  <string name="menu_karnaughMap">卡諾圖</string>
  <string name="menu_karnaughMap_tt">以卡諾圖表示當前表格</string>
  <string name="menu_pdfDocumentation">使用文檔</string>
  <string name="menu_openPdfDocumentation">打開 {0}</string>
  <string name="menu_showDataTable">顯示測量值表格</string>
  <string name="menu_showDataTable_tt">在新視窗中顯示帶有測量值的表格</string>
  <string name="menu_showDataGraph">顯示測量圖</string>
  <string name="menu_showDataGraph_tt">在新視窗中顯示測量圖</string>
  <string name="menu_exportZIP">導出為 ZIP 檔案</string>
  <string name="menu_exportZIP_tt">導出電路為 ZIP 壓縮檔案，該壓縮檔案包含所有電路功能需要的必要檔案</string>
  <string name="menu_labelPins">標簽化輸入輸出訊號</string>
  <string name="menu_labelPins_tt">為所有沒有標簽的輸入輸出訊號自動添加標簽</string>
  <string name="menu_tutorial">使用指南</string>
  <string name="menu_tutorial_tt">打開新手使用指南</string>
  <string name="menu_stats">電路統計</string>
  <string name="menu_stats_tt">顯示所有已使用元件的清單</string>
  <string name="stat_number">數量</string>
  <string name="stat_part">元件</string>
  <string name="stat_inputs">輸入</string>
  <string name="stat_bits">位</string>
  <string name="stat_addrBits">位址位</string>
  <string name="msg_errorOpeningDocumentation">打開 PDF 檔案時遇到錯誤！</string>
  <string name="message">&lt;h1&gt;Digital&lt;/h1&gt;
      &lt;p&gt;一個簡單的數位電路模擬器&lt;/p&gt;
      &lt;p&gt;作者： H. Neemann  2016-2023&lt;/p&gt;
      &lt;p&gt;所用圖標來自 &lt;a href="http://tango.freedesktop.org"&gt;Tango Desktop Project&lt;/a&gt;&lt;/p&gt;
      &lt;p&gt;在 &lt;a href="https://github.com/hneemann/[[name]]"&gt;GitHub&lt;/a&gt; 查看該項目，並&lt;a href="https://github.com/hneemann/[[name]]/releases/latest"&gt;下載&lt;/a&gt;最新的發行版&lt;/p&gt;
      &lt;p&gt;可以在這里提交&lt;a href="https://github.com/hneemann/[[name]]/issues/new?body=version:%20[[version]]&amp;labels=bug"&gt;問題&lt;/a&gt;或&lt;a href="https://github.com/hneemann/[[name]]/issues/new?labels=enhancement"&gt;建議&lt;/a&gt;&lt;/p&gt;</string>
  <string name="msg_N_nodes">{0} 結點</string>
  <string name="msg_analyseErr">分析電路時遇到錯誤</string>
  <string name="msg_color">顏色</string>
  <string name="msg_errorCreatingModel">新建電路時遇到錯誤</string>
  <string name="msg_errorDuringCalculation">化簡電路時遇到錯誤</string>
  <string name="msg_errorDuringHardwareExport">建立硬體設定時遇到錯誤</string>
  <string name="msg_errorEditingValue">編輯屬性時遇到錯誤</string>
  <string name="msg_errorImportingModel_N0">匯入電路 {0} 時遇到錯誤！</string>
  <string name="msg_errorUpdatingLibrary">更新元件庫遇到錯誤！</string>
  <string name="msg_errorReadingFile">讀取檔案時遇到錯誤</string>
  <string name="msg_remoteUnknownCommand">未知命令 {0}</string>
  <string name="msg_errorWritingFile">寫入檔案時遇到錯誤</string>
  <string name="msg_frequency_N">最大頻率為 {0} kHz</string>
  <string name="msg_missingShape_N">形狀 {0} 丟失</string>
  <string name="msg_pins">接腳分配</string>
  <string name="msg_pinMap_pin_N_is_N">接腳 {0}: {1}</string>
  <string name="msg_restartNeeded">當前更改需要重啟生效！</string>
  <string name="msg_enterAnExpression">輸入運算式：</string>
  <string name="msg_runningTestError">運行測試時遇到錯誤：</string>
  <string name="msg_testResult">測試結果</string>
  <string name="msg_test_N_Passed">{0} 通過</string>
  <string name="msg_test_N_Failed">{0} 失敗</string>
  <string name="msg_test_missingLines_tt">所有測試用例已執行，但沒有顯示所有結果。然而，對測試結果的評估是正確的！</string>
  <string name="msg_creatingHelp">建立幫助時遇到錯誤！</string>
  <string name="msg_clipboardContainsNoImportableData">剪貼板包含不可匯入數據！</string>
  <string name="msg_selectAnEmptyFolder">請選擇空檔案夾！</string>
  <string name="msg_actualCircuit">實際電路</string>
  <string name="msg_fileNotAccessible">檔案不可匯入！可能存在同名檔案？</string>
  <string name="msg_fileIsNotUnique">檔案名不唯一！工作目錄和子目錄下的所有檔案必須具有唯一的檔案名。</string>
  <string name="msg_duplicateLibraryFiles">存在同名檔案：</string>
  <string name="msg_fileNotImportedYet">檔案尚未匯入</string>
  <string name="msg_fileExists">檔案 {0} 已存在！是否覆蓋當前檔案？</string>
  <string name="msg_isLocked">已禁止編輯電路。你可以在 "{0} -&gt; {1} -&gt; {2}" 移除鎖定</string>
  <string name="msg_speedTestError">測試運行速度遇到錯誤！</string>
  <string name="msg_pin_N">接腳 {0}</string>
  <string name="msg_numberingWizard">編號向導</string>
  <string name="msg_pin_numbering_N">選擇接腳 {0}:</string>
  <string name="msg_framesWritten_N">寫入幀：{0}</string>
  <string name="msg_errorWritingGif">寫入 GIF 檔案錯誤！</string>
  <string name="btn_gifComplete">完成</string>
  <string name="btn_gifComplete_tt">GIF 檔案結束並關閉</string>
  <string name="msg_gifExport">導出 GIF</string>
  <string name="msg_errCausedBy">由於</string>
  <string name="msg_inputsToInvert">待翻轉輸入</string>
  <string name="msg_none">未設定</string>
  <string name="msg_errGettingPinNames">不能確定接腳名稱</string>
  <string name="msg_errInFile_N">發生在檔案 {0}。</string>
  <string name="msg_affectedComponentsAre_N">受影響元件： {0}</string>
  <string name="msg_signal_N">訊號 {0}</string>
  <string name="msg_thereAreMissingPinNumbers">接腳 {0} 未指定接腳編號！</string>
  <string name="msg_modelHasErrors">僅當電路沒有錯誤時才可導出！</string>
  <string name="msg_noKVMapAvailable">無有效 KV 圖！</string>
  <string name="msg_dataNotUpdatedAnymore">數據不會被更新</string>
  <string name="msg_modifyThisAttribute">修改當前值</string>
  <string name="msg_invalidEditorValue">包含無效數據字段！</string>
  <string name="msg_create CHNFile">建立 CHN 檔案。</string>
  <string name="msg_tableHasManyRowsConfirm">當前表非常大，導出需要些時間。確認導出？</string>
  <string name="msg_circuitIsRequired">必須先建立和分析電路，不能使用獨立的真值表生成硬體描述。</string>
  <string name="msg_noData">沒有數據</string>
  <string name="msg_errorClosingExternalProcess">不能關閉外部程序！</string>
  <string name="msg_checkResult">測試結果：</string>
  <string name="btn_checkCode">測試</string>
  <string name="btn_checkCode_tt">啟動應用以測試輸入程式碼是否正確。</string>
  <string name="msg_codeNotConsistent">不能自動建立輸入和輸出埠，請檢測設定！</string>
  <string name="msg_applicationFileNotFound">未發現可執行檔案 "{0}"</string>
  <string name="msg_enterText">輸入文字！</string>
  <string name="btn_startATMISP">啟動 ATMISP</string>
  <string name="btn_startATMISP_tt">啟動外部程式 ATMISP。</string>
  <string name="msg_errorStartingATMISP">啟動 ATMISP 遇到錯誤！</string>
  <string name="msg_ATMISPIsStillRunning">ATMISP 在繼續運行！當關閉當前對話框，ATMISP 被終止。</string>
  <string name="menu_runAllTests">運行所有測試(當前目錄)</string>
  <string name="menu_runAllTests_tt">對當前目錄下的所有電路進行測試</string>
  <string name="msg_testPassed_N">{0} 測試行通過</string>
  <string name="msg_testFile">測試檔案</string>
  <string name="msg_truthTable">真值表</string>
  <string name="btn_copyToClipboard">剪貼板</string>
  <string name="btn_copyToClipboard_tt">複製文字到剪貼板。</string>
  <string name="ok">確定</string>
  <string name="rot_0">0°</string>
  <string name="rot_180">180°</string>
  <string name="rot_270">270°</string>
  <string name="rot_90">90°</string>
  <string name="tt_deleteItem">刪除選中內容</string>
  <string name="tt_moveItemDown">下移該項</string>
  <string name="tt_moveItemUp">上移該項</string>
  <string name="win_allSolutions">所有可能方案</string>
  <string name="win_testdata_N">測試數據 {0}</string>
  <string name="win_data">數據</string>
  <string name="win_confirmExit">確認退出</string>
  <string name="win_measures">測量</string>
  <string name="win_saveChanges">儲存變更？</string>
  <string name="win_stateChanged">內容已更改</string>
  <string name="win_table">表</string>
  <string name="win_table_exportDialog">導出</string>
  <string name="win_itempicker_title">選擇</string>
  <string name="win_valueInputTitle_N">輸入 {0}</string>
  <string name="win_karnaughMap">卡諾圖</string>
  <string name="btn_help">幫助</string>
  <string name="win_romDialogHelpTitle">居中 ROM 內容</string>
  <string name="msg_expressionHelpTitle">運算式</string>
  <string name="msg_testVectorHelpTitle">測試向量</string>
  <string name="fsm_title">有限狀態機</string>
  <string name="fsm_set_N">設定 {0}</string>
  <string name="menu_fsm">有限狀態機</string>
  <string name="menu_fsm_tt">打開有限狀態機編輯對話框</string>
  <string name="menu_fsm_create">建立</string>
  <string name="menu_fsm_create_table">狀態轉換表</string>
  <string name="menu_fsm_create_counter">建立計數器</string>
  <string name="menu_fsm_create_counter_N">{0} 狀態</string>
  <string name="menu_fsm_Help_tt">有限狀態機編輯器使用幫助</string>
  <string name="key_stateNum">狀態碼</string>
  <string name="key_stateNum_tt">表示該狀態的數位</string>
  <string name="key_isInitialState">初始狀態</string>
  <string name="key_isInitialState_tt">如果設定，則該狀態為初始狀態</string>
  <string name="key_stateValues">輸出</string>
  <string name="key_transCond">條件</string>
  <string name="key_transCond_tt">布爾運算式</string>
  <string name="key_transRad">半徑</string>
  <string name="key_transRad_tt">圖中圓的半徑</string>
  <string name="msg_fsm_errorLoadingFile">載入檔案遇到錯誤！</string>
  <string name="msg_fsm_errorStoringFile">儲存檔案遇到錯誤！</string>
  <string name="msg_fsmTransition">轉換</string>
  <string name="msg_fsmState">狀態</string>
  <string name="msg_fsmNewState">新狀態</string>
  <string name="msg_fsmCantCreateTable">不能建立狀態轉換表</string>
  <string name="msg_fsmHelpTitle">有限狀態就編輯器幫助</string>
  <string name="msg_graphHelpTitle">測量圖</string>
  <string name="tutorial">使用指南</string>
  <string name="tutorial1">在接下來的指南中，我們將完成第一個簡單的電路：
      首先，在電路中添加一個輸入元件，我們可以通過 元件▸輸入輸出 列表找到該元件。</string>
  <string name="tutorial2">現在向電路中添加第二個輸入元件。
      最好將第二個輸入元件放置在第一個元件的下面。我們可以通過按住鼠標右鍵來移動電路，單擊元件來移動相應元件。</string>
  <string name="tutorial3">接下來，添加一個異OR 門。可以通過 元件▸邏輯 列表找到該元件。將該元件放置到輸入元件的右側，保持適當距離。</string>
  <string name="tutorial4">最後要添加的元件為輸出元件。
      將其放置在異OR 門的右側，保持適當距離。</string>
  <string name="tutorial5">為完成電路，必須繪制連接導線。
      點擊第一個輸入元件的紅色點，然後點擊異OR 門的一個藍色點來連接到異OR 門的輸入。</string>
  <string name="tutorial6">連接第二個輸入元件的紅色點到異OR 門的第二個藍色點，連接異OR 門的紅色點到輸出元件的藍色點。
      當繪制導線時，單擊可以固定導線，右擊取消繪制。</string>
  <string name="tutorial7">你的第一個電路此時已可正常工作。
      要模擬電路，點擊工具欄中的 “啟動模擬” 按鈕，如果移動鼠標到工具欄，相應的提示會顯示。</string>
  <string name="tutorial8">此時模擬已開啟，單擊輸入元件可以切換輸入值。</string>
  <string name="tutorial9">點擊工具欄中 “停止模擬” 按鈕來定制模擬。</string>
  <string name="tutorial10">繼續完成，需要給輸入和輸出添加標簽。
      在輸入元件上右擊打開對話框，在 MacOS 上使用 control+單擊，這時可以給輸入元件命名。</string>
  <string name="tutorial11">為所有輸入和輸出添加標簽</string>
  <string name="tutorialUniqueIdents">輸入和輸出名稱必須唯一</string>
  <string name="tutorialNotNeeded">跳過使用指南</string>
  <string name="elem_JK_FF_AS_tt">能夠儲存(J=K=0), 置位(J=1, K=0), 復位(J=0, K=1)或翻轉(J=K=1)儲存的內容。
      狀態僅能夠在時鐘上升沿發生改變。另有兩個額外的輸入可以立即改變狀態而不需要時鐘訊號。</string>
  <string name="elem_JK_FF_AS_pin_J">置位</string>
  <string name="elem_JK_FF_AS_pin_C">時鐘輸入</string>
  <string name="elem_JK_FF_AS_pin_K">復位</string>
  <string name="elem_JK_FF_AS_pin_Q">返回儲存的值</string>
  <string name="elem_JK_FF_AS_pin_~Q">翻轉後的儲存值</string>
  <string name="elem_JK_FF_AS_pin_Set">異步置位，輸入高電平將置位觸發器</string>
  <string name="elem_JK_FF_AS_pin_Clr">異步復位，輸入高電平將復位觸發器</string>
  <string name="elem_D_FF_AS_tt">接腳 D 的值在時鐘上升沿被儲存。可以設定位寬以允許儲存多位數據。
      另有兩個額外的輸入可以立即改變狀態而不需要時鐘訊號。</string>
  <string name="elem_D_FF_AS_pin_D">輸入</string>
  <string name="elem_D_FF_AS_pin_C">時鐘，上升沿觸發</string>
  <string name="elem_D_FF_AS_pin_Q">輸出</string>
  <string name="elem_D_FF_AS_pin_~Q">翻轉後的輸出</string>
  <string name="elem_D_FF_AS_pin_Set">異步置位，輸入高電平將置位觸發器</string>
  <string name="elem_D_FF_AS_pin_Clr">異步復位，輸入高電平將復位觸發器</string>
  <string name="elem_Monoflop_tt">單穩態觸發器(monoflop)，在時鐘上升沿置位。
      在經過一個可設定的延遲後，自動復位。該單穩態觸發器可重覆觸發。電路中必須存在唯一的一個時鐘元件，
      時鐘元件作為測量時間延遲的基準。</string>
  <string name="elem_Monoflop_pin_R">復位輸入，高電平有效</string>
  <string name="elem_Monoflop_pin_C">時鐘輸入</string>
  <string name="elem_Monoflop_pin_Q">輸出</string>
  <string name="elem_Monoflop_pin_~Q">翻轉後的輸出</string>
  <string name="err_noInputsAvailable">沒有可用輸入</string>
  <string name="err_noShapeFoundFor_N">未找到適用於元件 {0} 的形狀</string>
  <string name="err_notAllOutputsSameBits">所有連接的輸出必須具有相同位寬</string>
  <string name="err_notAllOutputsSupportHighZ">如果允許多個輸出訊號連接，所有輸出必須為三態輸出。</string>
  <string name="err_noOutConnectedToWire">導線 {0} 未連接到任何輸出，狀態未定義。</string>
  <string name="err_oneResultIsRequired">至少需要一個結果！</string>
  <string name="err_output_N_notDefined">輸出 {0} 未定義</string>
  <string name="err_pinMap_NoNameForPin_N">接腳 {0} 沒有標簽</string>
  <string name="err_pinMap_Pin_N_AssignedTwicePin">接腳 {0} 重覆！</string>
  <string name="err_pinMap_pin_N0_isNotAnInput">接腳 {0} 不是輸入！</string>
  <string name="err_pinMap_pin_N0_isNotAnOutput">接腳 {0} 不是輸出！</string>
  <string name="err_pinMap_toMannyInputsDefined">太多輸入！</string>
  <string name="err_pinMap_toMannyOutputsDefined">太多輸出！</string>
  <string name="err_pinNotPresent">接腳不存在</string>
  <string name="err_pinWithoutName">發現沒有定義標簽的接腳！</string>
  <string name="err_clockWithoutName">需要為時鐘訊號定義標簽。</string>
  <string name="err_pin_N0_atElement_N1_notFound">元件 {1} 沒有接腳 {0}</string>
  <string name="err_pin_N_notFound">未發現接腳 {0}</string>
  <string name="err_customShapeHasNoPin_N">自定義形狀未定義接腳 {0}</string>
  <string name="err_pin_N_unknown">未知接腳 {0}</string>
  <string name="err_portIsInUse">遠程埠被占用！是否有其它實例正在運行？</string>
  <string name="err_selectorInputCountMismatch">輸入埠數和選擇位數不匹配</string>
  <string name="err_spitterDefSyntaxError">分裂器 {0} 包含語法錯誤</string>
  <string name="err_splitterBitsMismatch">分裂器位數不匹配</string>
  <string name="err_splitterNotAllBitsDefined">所有輸入位必須定義！</string>
  <string name="err_splitterNotUnambiguously">輸入位重覆定義！</string>
  <string name="err_spitterToManyBits">分裂器僅允許 64 位！</string>
  <string name="err_tableBecomesToSmall">需要兩個輸入！</string>
  <string name="err_toManyInputs_max_N0_is_N1">太多變數，最多允許 {0} 個，但發現 {1} 個。</string>
  <string name="err_toManyInputsIn_N0_max_N1_is_N2">{0} 中包含太多變數，最多允許 {1} 個，但發現 {2} 個。</string>
  <string name="err_varNotAllowedInCUPL_N">CUPL 中不允許變數 {0}！</string>
  <string name="err_varNotDefined_N">變數 {0} 未定義</string>
  <string name="err_parserUnexpectedToken_N">意外的 Token {0}</string>
  <string name="err_parserMissingClosedParenthesis">缺少右括號</string>
  <string name="err_notANumber_N0_inLine_N1">第 {1} 行中的 {0} 不是數位！</string>
  <string name="err_variable_N0_notFound">變數 {0} 不存在</string>
  <string name="err_noTestInputSignalsDefined">測試向量未定義輸入訊號！</string>
  <string name="err_noTestOutputSignalsDefined">測試向量未定義輸出訊號！</string>
  <string name="err_noTestData">未發現測試數據。</string>
  <string name="elem_Register_tt">可以設定數據位寬度，和D觸發器不同，該暫存器具有使能輸入。</string>
  <string name="elem_Register_pin_D">輸入</string>
  <string name="elem_Register_pin_C">時鐘輸入，上升沿觸發</string>
  <string name="elem_Register_pin_en">使能輸入，高電平有效</string>
  <string name="elem_Register_pin_Q">返回儲存內容</string>
  <string name="elem_ROM_tt">非易失儲存器。可以通過屬性對話框編輯儲存內容。</string>
  <string name="elem_ROM_pin_A">位址位</string>
  <string name="elem_ROM_pin_D">輸出</string>
  <string name="elem_ROM_pin_sel">如果 sel 訊號為高電平，輸出為位址A所儲存的數據，如果 sel 訊號為低電平，輸出為高阻態。</string>
  <string name="elem_RAMDualPort">RAM(獨立埠)</string>
  <string name="elem_RAMDualPort_short">RAM</string>
  <string name="elem_RAMDualPort_tt">擁有獨立的數據輸入儲存埠和數據輸出讀取埠的RAM。</string>
  <string name="elem_RAMDualPort_pin_A">輸入和輸出共用位址位</string>
  <string name="elem_RAMDualPort_pin_C">時鐘輸入</string>
  <string name="elem_RAMDualPort_pin_Din">輸入數據</string>
  <string name="elem_RAMDualPort_pin_D">輸出數據</string>
  <string name="elem_RAMDualPort_pin_ld">輸出使能，高電平有效，當為低電平時，輸出呈高阻態</string>
  <string name="elem_RAMDualPort_pin_str">輸入使能，高電平有效</string>
  <string name="elem_BlockRAMDualPort">Block-RAM(獨立埠)</string>
  <string name="elem_BlockRAMDualPort_tt">該 RAM 輸出僅在時鐘上升沿更新，用於 FPGA 的塊內存。</string>
  <string name="elem_BlockRAMDualPort_pin_A">輸入和輸出共用位址位</string>
  <string name="elem_BlockRAMDualPort_pin_C">時鐘輸入</string>
  <string name="elem_BlockRAMDualPort_pin_Din">輸入數據</string>
  <string name="elem_BlockRAMDualPort_pin_D">輸出數據</string>
  <string name="elem_BlockRAMDualPort_pin_str">輸入使能，高電平有效</string>
  <string name="elem_EEPROMDualPort">EEPROM(獨立埠)</string>
  <string name="elem_EEPROMDualPort_tt">擁有獨立的數據輸入儲存埠和數據輸出讀取埠的EEPROM。</string>
  <string name="elem_EEPROMDualPort_pin_A">輸入和輸出共用位址位</string>
  <string name="elem_EEPROMDualPort_pin_C">時鐘輸入</string>
  <string name="elem_EEPROMDualPort_pin_Din">輸入數據</string>
  <string name="elem_EEPROMDualPort_pin_D">輸出數據</string>
  <string name="elem_EEPROMDualPort_pin_ld">輸出使能，高電平有效</string>
  <string name="elem_EEPROMDualPort_pin_str">輸入使能，高電平有效</string>
  <string name="elem_RAMSinglePort">RAM(雙向埠)</string>
  <string name="elem_RAMSinglePort_short">RAM</string>
  <string name="elem_RAMSinglePort_tt">擁有一個既可用作數據輸入，又可用作數據輸出埠的RAM。</string>
  <string name="elem_RAMSinglePort_pin_A">輸入和輸出共用位址位</string>
  <string name="elem_RAMSinglePort_pin_C">時鐘輸入</string>
  <string name="elem_RAMSinglePort_pin_D">雙向數據埠</string>
  <string name="elem_RAMSinglePort_pin_ld">輸出使能，高電平有效</string>
  <string name="elem_RAMSinglePort_pin_str">輸入使能，高電平有效</string>
  <string name="elem_RAMSinglePortSel">RAM(片選)</string>
  <string name="elem_RAMSinglePortSel_short">RAM</string>
  <string name="elem_RAMSinglePortSel_tt">擁有一個既可用作數據輸入，又可用作數據輸出埠的RAM。
      如果片選輸入(CS)為低電平，元件被禁止。用於通過使用較小容量的RAM和位址解碼器構造較大容量的RAM。</string>
  <string name="elem_RAMSinglePortSel_pin_A">輸入和輸出共用位址位</string>
  <string name="elem_RAMSinglePortSel_pin_WE">輸入使能，高電平有效</string>
  <string name="elem_RAMSinglePortSel_pin_D">雙向數據埠</string>
  <string name="elem_RAMSinglePortSel_pin_CS">片選使能，輸入為高電平時，RAM可用，否則輸出為高阻態。</string>
  <string name="elem_RAMSinglePortSel_pin_OE">輸出使能，高電平有效</string>
  <string name="elem_EEPROM">EEPROM</string>
  <string name="elem_EEPROM_tt">擁有一個既可用作數據輸入，又可用作數據輸出埠的EEPROM。
      如果片選輸入(CS)為低電平，元件被禁止。</string>
  <string name="elem_EEPROM_pin_A">輸入和輸出共用位址位</string>
  <string name="elem_EEPROM_pin_WE">輸入使能，高電平有效</string>
  <string name="elem_EEPROM_pin_D">雙向數據埠</string>
  <string name="elem_EEPROM_pin_CS">片選使能，輸入為高電平時，EEPROM可用，否則輸出為高阻態。</string>
  <string name="elem_EEPROM_pin_OE">輸出使能，高電平有效</string>
  <string name="elem_RAMDualAccess_short">RAM</string>
  <string name="elem_RAMDualAccess_tt">一個埠可以讀寫，另一個埠只讀的RAM。
      第二個埠可用於圖形邏輯訪問。此時，處理器寫數據到RAM，圖形邏輯同時讀取數據。</string>
  <string name="elem_RAMDualAccess_pin_1D">輸出埠 1</string>
  <string name="elem_RAMDualAccess_pin_2D">輸出埠 2</string>
  <string name="elem_RAMDualAccess_pin_1A">用於埠 1 讀取和寫入數據的位址位</string>
  <string name="elem_RAMDualAccess_pin_2A">用於埠 2 讀取和寫入數據的位址位</string>
  <string name="elem_RAMDualAccess_pin_C">時鐘輸入</string>
  <string name="elem_RAMDualAccess_pin_1Din">輸入數據</string>
  <string name="elem_RAMDualAccess_pin_ld">輸出使能，高電平有效，用於輸出埠 1</string>
  <string name="elem_RAMDualAccess_pin_str">輸入使能，高電平有效</string>
  <string name="elem_Counter">計數器</string>
  <string name="elem_CounterPreset">計數器(可預設)</string>
  <string name="key_Closed">關閉</string>
  <string name="key_Closed_tt">設定開關的初始狀態</string>
  <string name="key_Value">值</string>
  <string name="key_Value_tt">常量的值</string>
  <string name="key_Width">寬度</string>
  <string name="key_Width_tt">當電路作為子電路時，電路符號的寬度</string>
  <string name="key_Height">高度</string>
  <string name="key_Height_tt">當電路作為子電路時，電路符號的高度</string>
  <string name="key_autoReload">模型啟動時重新載入</string>
  <string name="key_autoReload_tt">每次模型啟動時重新載入十六進制檔案</string>
  <string name="key_flipSelPos">翻轉選擇接腳位置</string>
  <string name="key_flipSelPos_tt">將選擇接腳移到對面的位置</string>
  <string name="key_SVG_LaTeX">使用 LaTeX 格式表示文字</string>
  <string name="key_SVG_LaTeX_tt">使用 LaTeX 格式表示文字</string>
  <string name="key_SVG_pinsInMathMode">數據模式命名接腳標簽</string>
  <string name="key_SVG_pinsInMathMode_tt">即使不包含索引，仍然使用數學模式命名接腳標簽</string>
  <string name="key_SVG_smallIO">縮小輸入和輸出接腳</string>
  <string name="key_equalsInsteadOfPlus">使用等號按鍵</string>
  <string name="menu_table_createCUPL_tt">根據電路建立 CUPL 源檔案</string>
  <string name="menu_table_createTT2_tt">根據電路建立 BLIF 檔案，然後啟動 Atmel fitte 建立 JEDEC 檔案。</string>
  <string name="menu_programDiode">編程二極體(熔絲)</string>
  <string name="menu_probe_memory">儲存器</string>
  <string name="menu_probe_memory_tt">顯示儲存器內容</string>
  <string name="menu_addPrefix_tt">為所有選中的輸入和輸出添加前綴，用於簡化複製 74xx 電路。</string>
  <string name="msg_errorCalculatingStep">執行單步時遇到錯誤</string>
  <string name="msg_errorImportingSvg">匯入 SVG 檔案時遇到錯誤</string>
  <string name="msg_errorCreatingSvgTemplate">建立 SVG 模板時遇到錯誤</string>
  <string name="msg_couldNotCreateStats">不能建立統計</string>
  <string name="msg_errorReadingToolchainConfig_N">讀取工具鏈設定 {0} 時遇發生錯誤</string>
  <string name="msg_commandStarted_N">命令 "{0}" 已啟動，處理可能需要些時間！</string>
  <string name="msg_commandEnded_N">命令 "{0}" 已完成！</string>
  <string name="msg_renameNet">重命名網路</string>
  <string name="msg_renameNet_N_OLD_NEW">還有 {0} 個網路名為 ''{1}'' 的隧道元件，是否重命名所有元件為 ''{2}''？</string>
  <string name="msg_dataWillBeLost_n">確定忽略 "{0}" 字段中的修改？</string>
  <string name="win_measures_fullstep">全時鐘測量</string>
  <string name="win_measures_microstep">單門測量</string>
  <string name="win_romDialog">包含 ROM</string>
  <string name="msg_newRelease_N">&lt;html&gt;
        &lt;h1&gt;新版本 {0} 可用&lt;/h1&gt;
        &lt;p&gt;發現新的模擬器&lt;/p&gt;
        &lt;p&gt;在這里 &lt;a href="https://github.com/hneemann/[[name]]/releases/latest"&gt;發行說明&lt;/a&gt;
        你可以查看有哪些功能變更。&lt;/p&gt;
        &lt;p&gt;也可以直接 &lt;a href="https://github.com/hneemann/[[name]]/releases/latest"&gt;下載&lt;/a&gt; 最新版本&lt;/p&gt;
        &lt;/html&gt;</string>
  <string name="key_stateValues_tt">定義輸出值。簡單的如 "A=1, B=0"，多位輸出，如 "A=101"。
      未定義的輸出狀態預設為 0。在狀態轉換中，為指定的輸出保持不變。</string>
  <string name="err_notDeterministic_N">有限狀態機 {0} 不確定</string>
  <string name="err_fsmNumberUsedTwice_N">狀態碼 {0} 重覆</string>
  <string name="err_fsmNoInitialState">找不到初始狀態</string>
  <string name="err_fsmState_N_notFound">找不到狀態 ''{0}''</string>
  <string name="err_fsmInvalidOutputAssignment_N">輸出 ''{0}'' 分配錯誤</string>
  <string name="err_fsmErrorInCondition_N">條件 ''{0}'' 錯誤</string>
  <string name="elem_GraphicCard">顯存</string>
  <string name="elem_GraphicCard_short">Gr-RAM</string>
  <string name="elem_GraphicCard_tt">用於顯示位圖圖形。
      每個像素都由一個儲存器位址表示。儲存的值使用固定的調色板定義像素的顏色。實現了兩個螢幕緩沖區以支援頁翻轉。
      輸入B選擇顯示哪個緩沖區。總儲存器大小為 dx * dy * 2。
      所使用的調色板的結構如下：索引0-9對應於白色，黑色，紅色，綠色，藍色，黃色，青色，品紅色，橙色和粉紅色。
      索引32-63映射灰度值，索引64-127表示64個顏色值，其中每個顏色通道有兩位。這樣產生了一個簡單的調色板，該調色板只能用7位尋址。
      如果支援16位索引，從0x8000開始，則可以使用每個顏色通道5位的高色模式，從而啟用32768種顏色。</string>
  <string name="elem_GraphicCard_pin_A">輸入和輸出共用位址位</string>
  <string name="elem_GraphicCard_pin_str">輸入使能，高電平有效</string>
  <string name="elem_GraphicCard_pin_C">時鐘輸入</string>
  <string name="elem_GraphicCard_pin_ld">輸出使能，高電平有效</string>
  <string name="elem_GraphicCard_pin_B">選擇需要顯示的螢幕緩沖區</string>
  <string name="elem_GraphicCard_pin_D">雙向數據埠</string>
  <string name="elem_RAMDualAccess">RAM(多埠)</string>
  <string name="elem_RegisterFile_tt">1個寫埠，兩個讀埠的儲存器，用於實現處理器暫存器。</string>
  <string name="elem_RegisterFile_pin_Da">輸出埠 a</string>
  <string name="elem_RegisterFile_pin_Db">輸出埠 b</string>
  <string name="elem_RegisterFile_pin_Ra">輸出到埠 a 的暫存器</string>
  <string name="elem_RegisterFile_pin_Rb">輸出到埠 b 的暫存器</string>
  <string name="elem_RegisterFile_pin_Rw">寫暫存器</string>
  <string name="elem_RegisterFile_pin_we">寫使能，高電平有效</string>
  <string name="elem_RegisterFile_pin_C">時鐘</string>
  <string name="elem_RegisterFile_pin_Din">輸入數據</string>
  <string name="elem_Counter_tt">簡單的計數器。時鐘上升沿增加計數，通過 clr 輸入重置為 0。可通過屬性對話框設定計數器位數。</string>
  <string name="elem_Counter_pin_C">時鐘輸入</string>
  <string name="elem_Counter_pin_clr">同步復位，高電平有效</string>
  <string name="elem_Counter_pin_ovf">溢出位</string>
  <string name="elem_Counter_pin_out">計數輸出</string>
  <string name="elem_Counter_pin_en">使能位，高電平有效</string>
  <string name="elem_CounterPreset_tt">可預置位的計數器，可以指定最大值和計數方向。</string>
  <string name="elem_CounterPreset_short">Counter</string>
  <string name="elem_CounterPreset_pin_out">計數輸出</string>
  <string name="elem_CounterPreset_pin_ovf">溢出位，當使能時，如果計數到達最大或遞減到 0，則輸出 1。</string>
  <string name="elem_CounterPreset_pin_C">時鐘輸入</string>
  <string name="elem_CounterPreset_pin_clr">同步復位</string>
  <string name="elem_CounterPreset_pin_en">使能位，高電平有效</string>
  <string name="elem_CounterPreset_pin_dir">計數方向，0 表示遞增</string>
  <string name="elem_CounterPreset_pin_ld">輸入使能，當為 1時 ，輸入數據在下一個時鐘訊號存入計數器</string>
  <string name="elem_CounterPreset_pin_in">數據輸入</string>
  <string name="elem_Add">加法器</string>
  <string name="elem_Add_short">Add</string>
  <string name="elem_Add_tt">計算輸入 a 和輸入 b 的和，如果設定進位，則結果加 1。</string>
  <string name="elem_Add_pin_a">第一個輸入</string>
  <string name="elem_Add_pin_b">第二個輸入</string>
  <string name="elem_Add_pin_s">加法運算結果</string>
  <string name="elem_Add_pin_c_i">進位輸入，如果為高電平，則結果加 1。</string>
  <string name="elem_Add_pin_c_o">輸出進位</string>
  <string name="elem_Sub">減法器</string>
  <string name="elem_Sub_short">Sub</string>
  <string name="elem_Sub_tt">將二進制輸入 a 和輸入 b相減，如果進位輸入為高電平，則結果減 1。</string>
  <string name="elem_Sub_pin_c_i">進位輸入，如果為高電平，則結果減 1。</string>
  <string name="elem_Sub_pin_a">輸入 a</string>
  <string name="elem_Sub_pin_b">輸入 b</string>
  <string name="elem_Sub_pin_s">減法運算結果</string>
  <string name="elem_Sub_pin_c_o">如果出現溢出，則輸出為 1。</string>
  <string name="elem_Mul">乘法器</string>
  <string name="elem_Mul_short">Mul</string>
  <string name="elem_Mul_tt">將整數輸入 a 和 b 相乘</string>
  <string name="elem_Mul_pin_a">輸入 a</string>
  <string name="elem_Mul_pin_b">輸入 b</string>
  <string name="elem_Mul_pin_mul">乘法運算結果</string>
  <string name="elem_Div">除法器</string>
  <string name="elem_Div_short">Div</string>
  <string name="elem_Div_tt">將整數 a 除以 整數 b。 如果除數為零，則除以1。 在有符號除法中，余數始終為正。</string>
  <string name="elem_Div_pin_a">被除數</string>
  <string name="elem_Div_pin_b">除數</string>
  <string name="elem_Div_pin_q">商</string>
  <string name="elem_Div_pin_r">余數</string>
  <string name="elem_BarrelShifter">桶式移位器</string>
  <string name="elem_BarrelShifter_short">shift</string>
  <string name="elem_BarrelShifter_tt">根據移位輸入將數據移位</string>
  <string name="elem_BarrelShifter_pin_in">輸入數據</string>
  <string name="elem_BarrelShifter_pin_shift">移位寬度</string>
  <string name="elem_BarrelShifter_pin_out">移位後的輸出</string>
  <string name="elem_Comparator">比較器</string>
  <string name="elem_Comparator_tt">比較二進制輸入 a 和 b</string>
  <string name="elem_Comparator_pin_a">輸入 a</string>
  <string name="elem_Comparator_pin_b">輸入 b</string>
  <string name="elem_Comparator_pin_=">如果 a 等於 b，輸出 1</string>
  <string name="elem_Comparator_pin_&gt;">如果 a 大於 b，輸出 1</string>
  <string name="elem_Comparator_pin_&lt;">如果 a 小於 b，輸出 1</string>
  <string name="elem_Neg">補碼器</string>
  <string name="elem_Neg_short">Neg</string>
  <string name="elem_Neg_pin_in">輸入</string>
  <string name="elem_Neg_pin_out">補碼輸出</string>
  <string name="elem_Neg_tt">補碼運算</string>
  <string name="elem_BitExtender">符號擴展器</string>
  <string name="elem_BitExtender_short">SignEx</string>
  <string name="elem_BitExtender_tt">增加符號數的位寬同時保持值不變</string>
  <string name="elem_BitExtender_pin_in">輸入值，位寬必須小於輸出</string>
  <string name="elem_BitExtender_pin_out">擴展後的輸入</string>
  <string name="elem_BitCount">位計數器</string>
  <string name="elem_BitCount_tt">返回輸入值中位為 1 的位數</string>
  <string name="elem_BitCount_pin_in">輸入</string>
  <string name="elem_BitCount_pin_out">包含 1 的位數</string>
  <string name="msg_errorStartCommand_N">啟動命令 {0} 時遇到錯誤</string>
  <string name="msg_errParsingGenerics">解析程式碼時遇到錯誤</string>
  <string name="err_vgaModeNotDetected_N">未檢測到視頻模式 ({0})</string>
  <string name="key_avoidActiveLow_tt">避免輸出0。用於設定延遲電路。僅當允許高阻態輸出時可用。</string>
  <string name="key_InputSplitting_tt">假設 4位，2位，2位作為輸入，可表示為 "4,2,2"。
        還可以使用 * 號，如 16 位表示為 "1*16"([Bits]*[Number])。還可以直接指定使用的位而不用關心順序，如 "4-7,0-3"。
        輸入位必須明確且完整的指定。</string>
  <string name="key_OutputSplitting">輸出分割</string>
  <string name="key_OutputSplitting_tt">假設 4位，2位，2位作為輸出，可表示為 "4,2,2"。
      還可以使用 * 號，如 16 位表示為 "1*16"([Bits]*[Number])。還可以直接指定使用的位而不用關心順序，如 "4-7,0-3"。
      輸出位可以使用多次，如 "0-7,1-6,4-7"。</string>
  <string name="key_SelectorBits">選擇位</string>
  <string name="key_SelectorBits_tt">選擇位位數</string>
  <string name="key_Signed">補碼運算</string>
  <string name="key_Signed_tt">使用補碼</string>
  <string name="key_barrelSigned">補碼輸入</string>
  <string name="key_barrelSigned_tt">輸入數據為補碼格式</string>
  <string name="key_barrelShifterMode_tt">桶式移位器模式</string>
  <string name="key_barrelShifterMode_logical">邏輯</string>
  <string name="key_barrelShifterMode_rotate">環繞</string>
  <string name="key_barrelShifterMode_arithmetic">算術</string>
    <string name="key_microStep">顯示單步</string>
    <string name="key_microStep_tt">在圖形中顯示所有單步</string>
    <string name="key_showDataGraphMicro">以單步模式顯示測量圖</string>
    <string name="key_showDataGraphMicro_tt">當模擬啟動時，以單步模式顯示測量圖。</string>
    <string name="key_Testdata_tt">測試用例描述，詳細的語法可以在測試數據編輯器幫助對話框查看。</string>
    <string name="key_isProgramCounter_tt">將該暫存器作為程式計數器。暫存器的值返回給外部匯編器，用來表示當前偵錯程式碼行。</string>
    <string name="key_relayNormallyClosed">閉合暫存器</string>
    <string name="key_relayNormallyClosed_tt">輸入輸入為低電平，繼電器閉合</string>
    <string name="key_poles">極數</string>
    <string name="key_poles_tt">可用極數</string>
    <string name="key_ledPersistence_tt">不能將頻率增加得太多以至於使閃爍消失。盡管如此，為了抑制閃爍，可以使用此選項為LED開啟“余輝”。 當啟用時，即使某個引腳變為高阻，LED仍保持點亮狀態。
        這模擬了高於臨界閃爍融合頻率的頻率。
    </string>
    <string name="key_unidirectional_tt">單向晶體管僅將訊號從源極傳播到汲極。模擬時，比雙向晶體管快很多。
        由於沒有從汲極到源極的反饋，因此在這種模式下，晶體管導通時無法使連接的導線短路。此模式對於模擬某些CMOS電路是必需的。
    </string>
    <string name="key_externalInputs_tt">外部程序的輸入埠。格式為逗號分割的訊號名稱，對於每個訊號，可通過冒號指定位數。如8位加法器的輸入可表示為 "a:8,b:8,c_in"。</string>
    <string name="key_externalOutputs_tt">外部程序的輸出埠。格式為逗號分割的訊號名稱，對於每個訊號，可通過冒號指定位數。如8位加法器的輸出可表示為 "s:8,c_out"。</string>
    <string name="key_ghdlPath_tt">可執行檔案ghdl路徑。僅當需要使用 ghdl 模擬 vhdl 元件時設定。</string>
    <string name="key_midiChannel">MIDI通道</string>
    <string name="key_midiChannel_tt">選擇需要使用的 MIDI通道</string>
    <string name="key_midiInstrument">MIDI 設備</string>
    <string name="key_midiInstrument_tt">選擇需要使用的 MIDI 設備</string>
    <string name="key_midiProgChange">允許改變程式</string>
  <string name="key_midiProgChange_tt">增加一個新的輸入埠(PC)，如果該輸入為高電平，輸入埠 N 的值用於改變程式(設備)</string>
  <string name="key_switchActsAsInput">開關行為輸入化</string>
  <string name="key_switchActsAsInput_tt">開關行為類似輸入，開對應 0，關對應 1。</string>
  <string name="elem_DiodeForward">二極體(上拉)</string>
  <string name="elem_DiodeForward_tt">用於將導線上拉至VDD，必須將下拉電阻連接到二極體輸出。</string>
  <string name="elem_DiodeForward_pin_in">如果輸入為高電平，輸出則為高電平，其它情況輸出為高阻。</string>
  <string name="elem_DiodeForward_pin_out">如果輸入為高電平，輸出則為高電平，其它情況輸出為高阻。</string>
  <string name="elem_DiodeBackward">二極體(下拉)</string>
  <string name="elem_DiodeBackward_tt">用於將導線下拉至地，必須將上拉電阻連接到二極體輸出。</string>
  <string name="elem_DiodeBackward_pin_in">如果輸入為低電平，輸出則為低電平，其它情況輸出為高阻。</string>
  <string name="elem_DiodeBackward_pin_out">如果輸入為低電平，輸出則為低電平，其它情況輸出為高阻。</string>
  <string name="elem_Switch">開關</string>
  <string name="elem_Switch_pin">連接點</string>
  <string name="elem_Switch_tt">簡單的開關，沒有門延遲</string>
  <string name="elem_SwitchDT">雙擲開關</string>
  <string name="elem_SwitchDT_tt">雙擲開關，沒有門延遲</string>
  <string name="elem_Fuse">Fuse</string>
  <string name="elem_Fuse_tt">用於構建一次性可編程儲存器</string>
  <string name="elem_Fuse_pin_out1">連接點</string>
  <string name="elem_Fuse_pin_out2">連接點</string>
  <string name="elem_Relay">繼電器</string>
  <string name="elem_Relay_tt">繼電器是一種可以通過線圈控制的開關，如果電流流過線圈，則開關會閉合或斷開。不關心電流方向。</string>
  <string name="elem_Relay_pin_in1">控制輸入</string>
  <string name="elem_Relay_pin_in2">控制輸入</string>
  <string name="elem_RelayDT">雙擲繼電器</string>
  <string name="elem_RelayDT_tt">繼電器是一種可以通過線圈控制的開關，如果電流流過線圈，則開關會閉合或斷開。不關心電流方向。</string>
  <string name="elem_RelayDT_pin_in1">控制輸入</string>
  <string name="elem_RelayDT_pin_in2">控制輸入</string>
  <string name="elem_PFET_tt">P 通道場效應晶體管</string>
  <string name="elem_PFET_pin_G">閘極</string>
  <string name="elem_PFET_pin_S">源極</string>
  <string name="elem_PFET_pin_D">汲極</string>
  <string name="elem_NFET">N 通道場效應晶體管</string>
  <string name="elem_NFET_tt">N 通道場效應晶體管</string>
  <string name="elem_NFET_pin_G">閘極</string>
  <string name="elem_NFET_pin_S">源極</string>
  <string name="elem_NFET_pin_D">汲極</string>
  <string name="elem_FGPFET">P 通道浮動門場效應晶體管</string>
  <string name="elem_FGPFET_tt">P 通道浮動門場效應，如果浮柵中儲存有電荷，即使閘極為低電平時晶體管也不導通</string>
  <string name="elem_FGPFET_pin_G">閘極</string>
  <string name="elem_FGPFET_pin_S">源極</string>
  <string name="elem_FGPFET_pin_D">汲極</string>
  <string name="elem_FGNFET_tt">N 通道浮動門場效應晶體管，如果浮柵中儲存有電荷，即使閘極為高電平時晶體管也不導通</string>
  <string name="elem_FGNFET_pin_G">閘極</string>
  <string name="elem_FGNFET_pin_S">源極</string>
  <string name="elem_FGNFET_pin_D">汲極</string>
  <string name="elem_TransGate">傳輸閘</string>
  <string name="elem_TransGate_tt">由兩個晶體管構建的傳輸閘</string>
  <string name="elem_TransGate_pin_A">輸入 A</string>
  <string name="elem_TransGate_pin_B">輸入 B</string>
  <string name="elem_TransGate_pin_S">控制輸入</string>
  <string name="elem_TransGate_pin_~S">翻轉的控制輸入</string>
  <string name="elem_PowerSupply_tt">用於確保電源和地被連接</string>
  <string name="elem_PowerSupply_pin_VDD">必須連接到電源</string>
  <string name="elem_PowerSupply_pin_GND">必須連接到地</string>
  <string name="elem_Reset_tt">在電路初始化期間，該元件的輸出保持高電平。電路穩定後，輸出變為低電平。 如果輸出反相，則其行為相反。</string>
  <string name="elem_Break_tt">如果電路中使用到該元件，則 運行至中斷 按鈕可用。僅在禁用即時時鐘時才能使用此功能！</string>
  <string name="elem_Diode_tt">一個理想的二極體：正向偏置二極體兩端沒有壓降。</string>
  <string name="err_pullUpAndDownNotAllowed">禁止將上拉電阻和下拉電阻連接到同一條導線</string>
  <string name="err_openingDocumentation">無法打開瀏覽器</string>
  <string name="err_couldNotCreateFolder_N0">無法建立檔案夾 "{0}"</string>
  <string name="err_switchHasNoNet">不可僅連接輸入訊號到開關</string>
  <string name="err_couldNotFindIncludedFile_N0">找不到檔案 {0}</string>
  <string name="err_postProcessErrorIn_N0">執行 "{0}" 時遇到錯誤</string>
  <string name="err_processDoesNotTerminate_N">程序 "{0}" 無返回內容！</string>
  <string name="err_processExitedWithError_N1_N2">程序返回值非零 {0}: {1}</string>
  <string name="err_noExpressionsAvailable">找不到最簡等式！</string>
  <string name="msg_optimizationInProgress">正在計算，請稍等！</string>
  <string name="err_varName_N_UsedTwice">變數 {0} 重覆！</string>
  <string name="err_fileNeedsToBeSaved">檔案需要儲存！</string>
  <string name="err_recursiveNestingAt_N0">電路 {0} 匯入自身！</string>
  <string name="err_minimizationFailed">化簡結果不正確，變數的名稱或不唯一！</string>
  <string name="err_toManyIterations">循環中出現太多疊代！</string>
  <string name="err_diodeNeedsPullUpResistorAtOutput">二極體輸出需要上拉電阻！</string>
  <string name="err_diodeNeedsPullDownResistorAtOutput">二極體輸出需要下拉電阻！</string>
  <string name="err_testSignal_N_notFound">電路中找不到測試訊號 {0}！</string>
  <string name="err_toManyBits_Found_N0_maxIs_N1">僅允許 {1} 位數據，但給出 {0} 位！</string>
  <string name="err_MultiBitFlipFlopFound">禁止多於 1 位的觸發器！</string>
  <string name="err_invalidTransmissionGateState">傳輸閘的兩個控制輸入必須反相！</string>
  <string name="err_nameUsedTwice_N">訊號 {0} 使用多次！</string>
  <string name="err_errorParsingTestdata">解析測試數據遇到錯誤。</string>
  <string name="err_backtrackOf_N_isImpossible">不能分析元件 {0} 的模型。</string>
  <string name="err_errorInPowerSupply">電源佈線錯誤 {0}</string>
  <string name="err_pinIsNotANumber_N">接腳編號 {0} 不是整數</string>
  <string name="err_vhdlExporting">導出 VHDL 時遇到錯誤</string>
  <string name="err_vhdlNoEntity_N">找不到 {0} 的 VHDL 程式碼！</string>
  <string name="err_verilogNoElement_N">找不到 {0} 的 Verilog 程式碼！</string>
  <string name="err_vhdlErrorWritingTestBench">建立測試檔案遇到錯誤！</string>
  <string name="err_vhdlValuesOfType_N_notAllowed">不允許的類型 {0}！</string>
  <string name="err_vhdlANameIsMissing">缺失名稱，是否為所有接腳設定標簽？</string>
  <string name="err_hdlMultipleOutputsConnectedToNet_N_N_N">多個輸出連接在一起。({0}, {1}, {2})</string>
  <string name="err_unnamedNet">未命名網路</string>
  <string name="err_toManyVars">太多變數！</string>
  <string name="err_invalidExpression">無效運算式！</string>
  <string name="err_Node_N_isAComponent">{0} 不是一個路徑元素</string>
  <string name="err_loadingLibrary">載入庫時遇到錯誤</string>
  <string name="err_noManifestFound">JAR 檔案不包含 manifest！</string>
  <string name="err_noMainFoundInManifest">manifest 檔案不包含主類！</string>
  <string name="err_mainClass_N_NotFound">找不到類 {0}！</string>
  <string name="err_couldNotInitializeMainClass_N">不能建立類 {0} 的實例！</string>
  <string name="err_notMoreOutBitsThanInBits">輸入位必須多於輸出位！</string>
  <string name="err_constantsNotAllowed">禁止設定物理接腳為常量！</string>
  <string name="err_invalidNumberFormat_N_N">字符串 {0} 不是有效數位 (pos {1})！</string>
  <string name="err_invalidPinName_N">不允許名稱 "{0}"</string>
  <string name="err_whiteSpaceNotAllowedInTT2Name">TT2檔案禁止出現空格！</string>
  <string name="err_tableHasToManyResultColumns">表中包含太多列！</string>
  <string name="err_errorExportingZip">建立壓縮 zip 時遇到錯誤。</string>
  <string name="err_moreThanOneFastClock">僅允許存在一個高頻時鐘元件。</string>
  <string name="err_circuitHasCycles">電路包含環，無法分析當前電路。</string>
  <string name="err_monoflopRequiresOneClock">如果使用單穩態觸發器，必須有且也只有一個時鐘元件！</string>
  <string name="err_couldNotCreateElement_N">不能建立元件類型 {0}！</string>
  <string name="err_namesAreNotUnique_N">名稱 "{0}" 不唯一！</string>
  <string name="err_errorWritingDataToProcess">無法向外部程序寫入值！</string>
  <string name="err_errorReadingDataFromProcess">無法從外部程序讀取值！</string>
  <string name="err_errorCreatingProcess">無法建立外部程序！</string>
  <string name="err_timeoutReadingData_O">從外部程序讀取數據超時！ {0}</string>
  <string name="err_notEnoughDataReceived_O">接收數據不足！ {0}</string>
  <string name="err_invalidCharacterReceived_N_O">接收到的文字包含無效字符：{0}! {1}</string>
  <string name="err_processTerminatedUnexpected_O">程序異常終止！ {0}</string>
  <string name="err_couldNotTerminateProcess">無法結束程序！</string>
  <string name="err_couldNotStartProcess_N">無法啟動程序：{0}</string>
  <string name="err_exitValueNotNull_N_O">應用退出狀態非零 {0}：{1}</string>
  <string name="err_canOnlyExportExternalVHDL">僅 VHDL 程式碼可導出！</string>
  <string name="err_canOnlyExportExternalVerilog">僅 Verilog 程式碼可導出！</string>
  <string name="err_ifExternalComponentIsUsedTwiceCodeMustBeIdentical_N">如果一個外部元件被使用多次，程式碼必須相同！影響: {0}</string>
  <string name="err_writingToStdOut_O">無法寫入 stdOut：{0}</string>
  <string name="err_ghdlNotInstalled">VHDL 模擬器 ghdl 未安裝，安裝 ghdl (http://ghdl.free.fr/) 並重新嘗試。</string>
  <string name="err_iverilogNotInstalled">Verilog 模擬器 Icarus 未安裝，安裝 iverilog (http://iverilog.icarus.com/) 並重新嘗試。</string>
  <string name="err_errorAnalysingCircuit_N">分析電路 {0} 時遇到錯誤</string>
  <string name="err_romNeedsALabelToBeExported">每個 ROM 必須有唯一的標簽才能導出！</string>
  <string name="err_lutNeedsALabelToBeExported">每個 LUT 必須有唯一的標簽才能導出！</string>
  <string name="err_counterNeedsMoreBits">計數器至少需要兩位。</string>
  <string name="err_clocksNotAllowedInAsyncMode">禁止在異步模式使用時鐘元件。</string>
  <string name="err_verilogExporting">導出 Verilog 時遇到錯誤。</string>
  <string name="err_noRomFound">未發現程式儲存器！</string>
  <string name="err_parsingSVG">讀取 SVG 檔案時遇到錯誤。</string>
  <string name="err_morePinsDefinedInSVGAsNeeded">SVG 檔案包含電路中不存在的接腳。</string>
  <string name="err_midiSystemNotAvailable">MIDI 系統不可用。</string>
  <string name="err_midiChannel_N_NotAvailable">MIDI 通道 {0} 不可用。</string>
    <string name="err_midiInstrument_N_NotAvailable">MIDI 設備 {0} 不可用。</string>
    <string name="err_midiInstrumentsNotAvailable">MIDI 設備不可用</string>
    <string name="err_whileExecutingTests_N0">執行測試 "{0}" 時遇到錯誤！</string>
    <string name="err_thereIsAUnnamedIO">未命名的輸入或者輸出埠！</string>
    <string name="err_NameOfIOIsInvalidOrNotUnique_N">訊號名稱 "{0}" 無效或多次使用！</string>
    <string name="elem_StepperMotorUnipolar_pin_com">共中心連接</string>
    <string name="elem_Stop">停止</string>
    <string name="elem_Stop_tt">上升沿時停止模擬，效果同工具欄中的停止按鈕</string>
    <string name="elem_Stop_pin_stop">升沿時停止模擬</string>
    <string name="err_ROM_noFileGivenToLoad">自動重新載入的檔案名無效</string>
    <string name="key_colorScheme">顏色方案</string>
    <string name="key_colorScheme_DEFAULT">正常</string>
    <string name="key_colorScheme_DARK">深色</string>
    <string name="key_colorScheme_COLOR_BLIND">紅綠色盲</string>
    <string name="key_colorScheme_CUSTOM">自定義</string>
    <string name="menu_colorSchemePreset">預設</string>
    <string name="key_customColorScheme">自定義顏色</string>
    <string name="colorName_BACKGROUND">背景色</string>
    <string name="colorName_MAIN">前景色</string>
    <string name="colorName_WIRE">導線</string>
    <string name="colorName_WIRE_HIGH">高電平</string>
    <string name="colorName_WIRE_LOW">低電平</string>
    <string name="colorName_WIRE_VALUE">導線值</string>
    <string name="colorName_WIRE_OUT">輸出</string>
    <string name="colorName_WIRE_Z">高阻</string>
    <string name="colorName_ERROR">錯誤</string>
    <string name="colorName_PASSED">正常</string>
    <string name="colorName_PINS">管教</string>
    <string name="colorName_GRID">柵格</string>
    <string name="colorName_TESTCASE">測試用例</string>
    <string name="colorName_DISABLED">禁用</string>
    <string name="colorName_ASYNC">異步</string>
    <string name="colorName_HIGHLIGHT">高亮</string>
    <string name="cli_cli">命令行界面</string>
    <string name="cli_nonOptionalArgumentMissing_N">缺少非可選參數 {0}</string>
    <string name="cli_notABool_N">{0} 不是布爾類型</string>
    <string name="cli_notANumber_N">{0} 不是數位</string>
    <string name="cli_noArgument_N_available">參數 {0} 未定義</string>
    <string name="cli_notEnoughArgumentsGiven">缺少參數</string>
    <string name="cli_toMuchArguments">太多參數</string>
    <string name="cli_invalidType_N">無效類型</string>
    <string name="cli_command_N_hasNoSubCommand_N">{0} 沒有子命令 {1}</string>
    <string name="cli_options">選項</string>
    <string name="cli_help_test">第一個檔案名指定將要被測的電路。如果指定第二個檔案名，則執行該檔案中的測試用例。</string>
    <string name="cli_help_test_circ">待測檔案的檔案名</string>
    <string name="cli_help_test_tests">測試用例檔案的檔案名</string>
    <string name="cli_thereAreTestFailures">測試失敗</string>
    <string name="cli_errorExecutingTests">執行測試時發生錯誤</string>
    <string name="cli_help_svg">根據電路建立 SVG 檔案</string>
    <string name="cli_help_svg_dig">電路檔案名</string>
    <string name="cli_help_svg_svg">SVG 檔案名</string>
    <string name="cli_help_svg_ieee">使用 IEEE 符號</string>
    <string name="cli_errorCreatingSVG">建立 SVG 檔案遇到錯誤！</string>
    <string name="cli_help_stats">建立包含電路統計資訊的 CSV 檔案。</string>
    <string name="cli_help_stats_dig">電路檔案名</string>
    <string name="cli_help_stats_csv">CSV 檔案名，如果為空，將寫入到標準輸出。</string>
    <string name="cli_errorCreatingStats">建立統計檔案時遇到錯誤！</string>
    <string name="menu_table_exportTablePlainText">導出純文字</string>
    <string name="elem_ScopeTrigger">示波器</string>
    <string name="elem_ScopeTrigger_short">Scope</string>
    <string name="elem_ScopeTrigger_tt">顯示可測量值的變化圖，僅當電路穩定且該元件的輸入訊號變化時才會對測量數據采樣。</string>
    <string name="elem_ScopeTrigger_pin_T">當輸入的訊號發生變化時對測量數據采樣</string>
    <string name="elem_NotConnected">無連接</string>
    <string name="elem_NotConnected_tt">該元件可用於設定導線為高阻態。如果邏輯門的輸入被設定為高阻態，則輸出隨機。
      請注意，實際中，如果數位輸入未設定為高電平或低電平，而是保持未連接狀態，則可能會產生過多的電流消耗甚至損壞。</string>
    <string name="elem_NotConnected_pin_out">輸出高阻</string>
    <string name="err_notConnectedNotAllowed">此處禁止 無連接 符號</string>
    <string name="elem_ROMDualPort">多埠 ROM</string>
    <string name="elem_ROMDualPort_short">ROM</string>
    <string name="elem_ROMDualPort_tt">非易失性儲存器，可以在屬性對話框編輯儲存數據。</string>
    <string name="elem_ROMDualPort_pin_A1">D1輸出埠的位址</string>
    <string name="elem_ROMDualPort_pin_D1">當 s1 為高電平時，輸出 A1 位址的數據</string>
    <string name="elem_ROMDualPort_pin_s1">如果輸入為高電平，D1 輸出使能，如果輸入為低電平，D1 輸出高阻。</string>
    <string name="elem_ROMDualPort_pin_A2">D2輸出埠的位址</string>
    <string name="elem_ROMDualPort_pin_D2">當 s2 為高電平時，輸出 A2 位址的數據</string>
    <string name="elem_ROMDualPort_pin_s2">如果輸入為高電平，D2 輸出使能，如果輸入為低電平，D2 輸出高阻。</string>
    <string name="elem_PRNG">隨機數生成器</string>
    <string name="elem_PRNG_tt">用於生成隨機數。</string>
    <string name="elem_PRNG_short">PRNG</string>
    <string name="elem_PRNG_pin_S">隨機數種子</string>
    <string name="elem_PRNG_pin_se">如果為高電平，生成器在下次時鐘上升沿初始化。</string>
    <string name="elem_PRNG_pin_ne">如果為高電平，下次時鐘上升沿輸出一個新的隨機數。</string>
    <string name="elem_PRNG_pin_C">時鐘輸入</string>
    <string name="elem_PRNG_pin_R">隨機數輸出</string>
    <string name="elem_GenericInitCode">通用電路初始化</string>
    <string name="elem_GenericInitCode_tt">用於啟動通用電路時執行的程式碼。如果直接啟動通用電路，必須設定。</string>
    <string name="elem_GenericCode">Code</string>
    <string name="elem_GenericCode_tt">建立具體電路時執行的程式碼，例如向電路添加導線或元件。</string>
    <string name="err_hdlTestCaseHasGenericCode">導出 HDL 時不支援通用參數。</string>
    <string name="err_multipleRomsFound">存在多個可編程儲存器，只允許一個可編程儲存器！</string>
    <string name="err_noMemoryFound">未發現儲存器 "{0}"</string>
    <string name="err_multipleMemoriesFound">存在多個可編程儲存器 "{0}"</string>
    <string name="err_noGenericInitCode">通用元件未設定初始化程式碼。</string>
    <string name="err_multipleGenericInitCodes">多個初始化程式碼！</string>
    <string name="err_inGenericInitCode">分析初始化程式碼時遇到錯誤。</string>
    <string name="key_remainderPositive">余數始終為正</string>
    <string name="key_remainderPositive_tt">如果為高電平，符號除法的余數始終為正。</string>
    <string name="key_trigger">觸發</string>
    <string name="key_trigger_tt">觸發條件</string>
    <string name="key_trigger_rising">上升沿</string>
    <string name="key_trigger_falling">下降沿</string>
    <string name="key_trigger_both">上升和下降沿</string>
    <string name="mod_modifiedByRunningModel">模擬產生的改變</string>
    <string name="menu_scale">縮放設定</string>
    <string name="msg_supportsHDL">可以導出為 VHDL/Verilog。</string>
    <string name="msg_errorSettingModelToTestCase">設定測試用例行時出錯。</string>
    <string name="msg_keyAsGenericAttribute">通用電路 {0} 中使用的名稱</string>
    <string name="attr_createConcreteCircuitLabel">新建具體電路</string>
    <string name="attr_createConcreteCircuit">新建</string>
    <string name="attr_createConcreteCircuit_tt">根據輸入的參數，從當前通用電路建立一個具體電路。</string>
    <string name="attr_createConcreteCircuitErr">新建具體電路時出錯！</string>
    <string name="msg_fsm_optimizer">FSM 優化器</string>
    <string name="menu_fsm_optimize_state_numbers">優化狀態數</string>
    <string name="menu_fsm_optimize_state_numbers_tt">優化狀態數，以使實現的工作量最少。</string>
    <string name="menu_fsm_optimize_state_numbers_err">優化時出錯！</string>
    <string name="msg_fsm_optimizer_initial">初始覆雜度：</string>
    <string name="msg_fsm_optimizer_best">目前最優：</string>
    <string name="msg_search">搜索</string>
    <string name="elem_BusSplitter_pin_D">集合連接</string>
    <string name="elem_RAMAsync">異步 RAM</string>
    <string name="elem_RAMAsync_tt">當 we 為高電平時，每當位址或數據改變時，都會儲存數據 D 到位址 A</string>
    <string name="elem_RAMAsync_pin_A">讀寫位址</string>
    <string name="elem_RAMAsync_pin_D">待儲存數據</string>
    <string name="elem_RAMAsync_pin_we">寫使能</string>
    <string name="elem_RAMAsync_pin_Q">輸出位址 A 儲存的數據</string>
    <string name="elem_RegisterFile_short">Register</string>
    <string name="elem_Counter_short">計數器</string>
    <string name="elem_BitCount_short">位計數器</string>
    <string name="err_exact_N0_valuesNecessaryNot_N1">需要 {0} 個值，而不是 {1}</string>
    <string name="err_noValueSetFor_N0_atElement_N1">元件 ''{1}'' 的輸入埠 ''{0}'' 沒有連接到任何地方</string>
    <string name="err_seemsToOscillate">邏輯看起來產生震蕩，你可以通過單步方式運行電路來進行分析。</string>
    <string name="err_testDataExpected_N0_found_N1_numbersInLine_N2">期待 {0} 個值，但發現 {1} 個，位於行 {2}。</string>
    <string name="err_unexpectedToken_N0_inLine_N1">未知 token {0}，行 {1}</string>
    <string name="err_centralDefinedRomsAreNotSupported">不支援設定中定義的 ROMS！</string>
    <string name="err_errorLoadingRomData">加載編程數據時出錯。</string>
    <string name="err_allMemoriesNeedToHaveTheSameByteWidth">所有待加載數據必須具有相同的位寬</string>
    <string name="err_ProgMemLabelsNotDifferent">如果要將程式加載到多個RAM中，則所有RAM必須具有不同的名稱。</string>
    <string name="err_hdlNotKnown_N">未知 HDL：{0}</string>
    <string name="err_substitutingError">替換元件進行分析時出錯。</string>
    <string name="err_writeInCodeComponentsOnly">全局變數只能寫在程式碼元件中</string>
    <string name="err_virtualSignal_N_DeclaredTwiceInLine_N">訊號 {0} 在行 {1} 聲明了兩次！</string>
    <string name="err_csvNoHeaderFound">沒有表頭</string>
    <string name="err_csvNoOutputValuesFound">沒有輸出值！</string>
    <string name="err_csvNotEnoughValues">一行中缺少值</string>
    <string name="err_csvToManyValues">一行中包含太多的值</string>
    <string name="key_fixedPoint_tt">小數位數</string>
    <string name="key_activeLow_tt">如果選中該選項，則該元件處於活動狀態時輸出為低電平。</string>
    <string name="key_applicationType_GHDL">GHDL</string>
    <string name="key_applicationType_IVERILOG">IVerilog</string>
    <string name="key_iverilogOptions">IVerilog 選項</string>
    <string name="key_iverilogOptions_tt">IVerilog 選項</string>
    <string name="key_iverilogPath">IVerilog</string>
    <string name="key_ATMISP">ATMISP</string>
    <string name="key_shapeType_SIMPLE">Simple</string>
    <string name="key_shapeType_DIL">DIL-Chip</string>
    <string name="key_shapeType_LAYOUT">Layout</string>
    <string name="lib_ram">RAM</string>
    <string name="lib_eeprom">EEPROM</string>
    <string name="cli_help_test_allowMissingInputs">允許電路中缺少測試用例中定義的輸入。 如果有幾種可能的解決方案可能取決於不同的輸入，這將很有用。</string>
    <string name="menu_table_exportCSV">CSV</string>
    <string name="menu_table_exportCSV_tt">包含完整真值表的 CSV 檔案</string>
    <string name="msg_test_missingLines">太多內容！</string>
    <string name="msg_fitterResult">來自外部 fitter 的訊息</string>
    <string name="msg_startExternalFitter">執行外部 fitter</string>
    <string name="msg_truthTableCSV">逗號分割的值</string>
    <string name="menu_createBehavioralFixture">建立 Fixture 測試用例</string>
    <string name="menu_createBehavioralFixture_tt">建立 fixture 測試用例修覆當前行為</string>
    <string name="btn_createTestLine">建立 Fixture</string>
    <string name="btn_createTestLine_tt">在測試用例中建立新的 Fixture</string>
    <string name="btn_BehavioralFixtureComplete">完成</string>
    <string name="btn_BehavioralFixtureComplete_tt">建立測試用例元件</string>
    <string name="msg_errorCreatingTestCase">建立測試用例時產生錯誤。</string>
    <string name="fsm_noMove">沒有變化</string>
    <string name="fsm_moveTrans">遷移</string>
    <string name="fsm_moveStates">遷移 + 狀態</string>
    <string name="msg_errorPastingData">貼上數據時發生錯誤！</string>
    <string name="elem_Telnet">Telnet</string>
    <string name="elem_Telnet_tt">允許通過 Telnet 協議連接到電路，可以通過 Telnet 發送或接收字符。</string>
    <string name="elem_Telnet_pin_out">數據輸出</string>
    <string name="elem_Telnet_pin_in">待發送數據</string>
    <string name="elem_Telnet_pin_C">時鐘輸入</string>
    <string name="elem_Telnet_pin_wr">如果置位，發送輸入字節數據。</string>
    <string name="elem_Telnet_pin_rd">如果置位，輸出接收到的字節數據。</string>
    <string name="elem_VGA_short">VGA</string>
    <string name="elem_BusSplitter_pin_OE">如果置位，位於接腳 D 的值分別輸出到 D[i]，否則，D[i] 匯聚輸出到 D</string>
    <string name="elem_ExternalFile">外部檔案</string>
    <string name="elem_ExternalFile_tt">通過執行外部程式計算邏輯值。用於通過 VHDL 或 Verilog 定義元件行為。
      實際的模擬行為由外部模擬器完成。目前支援 VHDL 模擬器 ghdl 和 verilog 模擬器 Icarus Verilog。
      元件的名稱必須和模塊名稱一致！</string>
    <string name="err_errorRunningFitter">啟動外部 fitter 時遇到錯誤！</string>
    <string name="err_function_N0_notFoundInLine_N1">行 {1} 處未發現函式 {0}！</string>
    <string name="err_wrongNumOfArgsIn_N0_InLine_N1_found_N2_expected_N3">位於行 {1} 的函式 {0} 參數個數不正確（期望 {3} 個，發現 {2} 個）</string>
    <string name="err_invalidValue_N0_inFunction_N1">函式 {1} 中發現無效的值 {0}！</string>
    <string name="err_errorLoadingHDLFile_N">載入 HDL 檔案 {0} 時遇到錯誤！</string>
    <string name="err_emptyLabelIsNotAllowed">名稱不能為空！</string>
    <string name="err_evaluatingGenericsCode_N_N">運行通用程式碼時遇到錯誤，元件 {0} 程式碼 {1}</string>
    <string name="err_errorWritingFile_N">寫檔案 {0} 時發生錯誤。</string>
    <string name="err_circuitContainsNoComponents">電路沒有任何元件！</string>
    <string name="err_couldNotCreateServer">未能啟動服務器！</string>
    <string name="key_small">較小符號</string>
    <string name="key_small_tt">如果選中，將使用較小的符號形狀。</string>
    <string name="key_lastDataFile">檔案</string>
    <string name="key_lastDataFile_tt">載入 ROM 數據的檔案</string>
    <string name="key_intFormat_ascii">ASCII</string>
    <string name="key_intFormat_bin">Bin</string>
    <string name="key_intFormat_dec">Decimal</string>
    <string name="key_intFormat_def">Default</string>
    <string name="key_intFormat_hex">Hex</string>
    <string name="key_intFormat_oct">Octal</string>
    <string name="key_activeLow">低電平有效</string>
    <string name="key_CodeFile">程式程式碼</string>
    <string name="key_CodeFile_tt">通過外部應用執行的程式碼檔案。</string>
    <string name="key_equalsInsteadOfPlus_tt">使用等號鍵而不是加號鍵。如果加號字符不是主鍵，而是等號字符的第二個賦值，這總是有用的，例如 用於美式或法式鍵盤布局。</string>
    <string name="key_probeMode">顯示模式</string>
    <string name="key_probeMode_tt">定義是否顯示值或者計數器。</string>
    <string name="key_probeMode_VALUE">顯示值</string>
    <string name="key_probeMode_UP">上升沿計數</string>
    <string name="key_probeMode_DOWN">下降沿計數</string>
    <string name="key_probeMode_BOTH">上升和下降沿計數</string>
    <string name="key_telnetEscape">Telnet 模式</string>
    <string name="key_telnetEscape_tt">如果置位，Telnet 控制命令將會被執行。另外，服務器會發送 SGA 和 ECHO 命令。如果禁用該選項，服務器工作為簡單的 TCP 服務器。</string>
    <string name="key_port">埠</string>
    <string name="key_port_tt">服務器埠</string>
    <string name="key_skipHDL">導出 Verilog/VHDL 時忽略</string>
    <string name="key_skipHDL_tt">當導出 Verilog/VHDL 時，忽略內部實現，保留對電路的引用，以實現手動編寫電路實現。</string>
    <string name="lib_decoration">Decoration</string>
    <string name="lib_generic">Generic</string>
    <string name="lib_hdl">VHDL/Verilog</string>
    <string name="cli_help_test_verbose">如果設定，當發生錯誤時，輸出相關值的表格。</string>
    <string name="menu_copy_tt">複製到剪貼板</string>
    <string name="menu_table_exportCSVCondensed">緊湊 CSV</string>
    <string name="menu_table_exportCSVCondensed_tt">只包含關鍵數據的 CSV 檔案</string>
    <string name="stat_clocks">{0} 個半周期後終止於斷點 ''{1}''</string>
    <string name="msg_romDialogHelp">&lt;html&gt;
        &lt;h3&gt;動機&lt;/h3&gt;
        當包含 ROM 元件的電路被多次嵌入時，ROM 的內容通常用於該電路的每個實例。 然而，在某些情況下，可能需要多次嵌入這樣的電路，但每個實例使用不同的 ROM 內容。&lt;br/&gt;
        例如，多次使用 74xx ROM 但儲存器內容不同&lt;br/&gt;
        &lt;h3&gt;功能&lt;/h3&gt;
        通過該處，可以為電路中的所有 ROM 定義內容。 生成模擬模型時，每個 ROM 都會使用直接儲存在相應 ROM 中的內容進行初始化。 然後檢查此處是否定義了替代內容。 如果是，則將此處定義的內容加載到相應的 ROM 中。
        &lt;h3&gt;使用&lt;/h3&gt;
        需要注意的是，每個 ROM 都需要一個唯一的名稱來標識 ROM。 為此，請在 ROM 的標簽中使用星號 ('*')。 然後，星號被替換為由嵌入式電路的名稱構成的完整路徑。 如果電路僅包含一個 ROM 元件，則僅使用星號作為其標簽就足夠了。 所有嵌入式電路都必須命名，以便為每個 ROM 元件形成一個唯一的名稱。
        &lt;/html&gt;</string>
    <string name="key_defaultsDC">設定 DC 為未定義</string>
    <string name="key_defaultsDC_tt">設定所有未定義值為 "Don't Care"</string>
    <string name="msg_graphHelp">&lt;html&gt;&lt;body&gt;
        &lt;h3&gt;在圖中可以看到什麽？&lt;/h3&gt;
        與真正的邏輯分析儀不同，測量圖的 X 軸不顯示時間。而是顯示一個計數器，用於計算電路中狀態的變化。每當電路發生變化時，計數器就會遞增並顯示新狀態。&lt;br/&gt;您也可以將其視為經典的邏輯分析儀，如果電路中沒有任何變化，它不會儲存任何數據進行電路優化。但是，這也意味著無法從圖中讀取電路中兩次更改之間經過的時間是長還是短。&lt;br/&gt; 這種行為是由模擬的性質引起的：電路的模擬不知道時間的概念。對電路進行更改，並計算電路狀態的變化，直到電路再次穩定。然後進行下一個更改，其效果也是計算等等。對這些變化進行計數，並將計數器值顯示在圖表的 X 軸上。&lt;br/&gt; 此外，這也意味著電路不能超頻，因為直到電路在前一個上升沿後穩定後才計算時鐘下降沿的影響。
        &lt;/body&gt;&lt;/html&gt;</string>
    <string name="elem_Telnet_pin_av">如果數據存在則輸出 1</string>
    <string name="err_breakTimeOut">經過 {0} 個周期未在斷點 ''{1}'' 處檢測到中斷，或許需要在中斷元件中增加超時的周期數。</string>
    <string name="err_file_N0_ExistsTwiceBelow_N1">{1} 中，檔案 {0} 出現多次</string>
    <string name="key_intFormat_decSigned">有符號十進制</string>
    <string name="key_intFormat_fixed">定點</string>
    <string name="key_intFormat_fixedSigned">-有符號定點</string>
    <string name="key_intFormat_floating">浮點</string>
    <string name="key_fixedPoint">定點數</string>
    <string name="key_persistTime">視覺暫留</string>
    <string name="key_persistTime_tt">設定余輝的持續時間。 數值越大，余輝持續時間越長。</string>
    <string name="key_oscillationDetectionCounter">振蕩檢測</string>
    <string name="key_oscillationDetectionCounter_tt">如果電路尚未穩定，則檢測到振蕩的門傳播次數。</string>
    <string name="key_openRemotePort">允許遠程連接</string>
    <string name="key_openRemotePort_tt">-如果開啟，會打開一個 TCP 埠，可以通過該埠控制模擬器。</string>
    <string name="key_remotePort">埠號</string>
    <string name="key_remotePort_tt">遠程控制服務的埠</string>
    <string name="msg_bigEndian">大端</string>
    <string name="key_bigEndian">匯入時使用大端對齊</string>
    <string name="key_bigEndian_tt">匯入時使用大端對齊</string>
    <string name="menu_table_createCircuitMore">其它電路</string>
    <string name="menu_table_maxInputs_N">最多允許 {0} 個輸入</string>
    <string name="menu_presentationMode">演示模式</string>
    <string name="menu_presentationMode_tt">簡單的視圖用於演示</string>
    <string name="menu_find">查找</string>
    <string name="menu_find_tt">查找標簽、網路名和接腳編號</string>
    <string name="menu_calcMaxPathLen">最長路徑</string>
    <string name="menu_calcMaxPathLen_tt">輸入埠和輸出埠間的最長路徑</string>
    <string name="msg_maxPathLen">最長路徑包含 {0} 個門電路</string>
    <string name="msg_couldNotCalculateMaxPathLen">未能計算出最長路徑</string>
    <string name="key_source">數據源</string>
    <string name="key_source_noData">未載入數據</string>
    <string name="key_source_file">檔案</string>
    <string name="key_source_dataField">儲存數據</string>
    <string name="err_could_not_load_rom">未能載入 ROM 數據</string>
    <string name="msg_fixesCreated_N">修正: {0}</string>
</resources>