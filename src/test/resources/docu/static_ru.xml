<?xml version="1.0" encoding="UTF-8"?>
<root>
    <chapter heading="Digital">
        <subchapter heading="Введение">
            <par>
                Digital - это простой симулятор, используемый для моделирования цифровых схем. Логические вентили подключены
                друг к другу проводами, и можно смоделировать поведение всей схемы.
                Пользователь может взаимодействовать с симуляцией, нажимая кнопки или задавая
                значения на входы схемы.
            </par>
            <par>
                Таким образом, можно построить и смоделировать большинство базовых схем, используемых в цифровой электронике.
                В папке <e>examples</e> пользователи могут найти примеры, включающие функциональные
                16-битный однотактный процессор Гарварда.
            </par>
            <par>
                Симулятор имеет два режима работы: режим редактирования и моделирования.
                В режиме редактирования можно вносить изменения в схему. Пользователи могут добавлять или подключать компоненты.
                В этом режиме имитация отключена.
                Режим моделирования активируется нажатием кнопки <e>Старт</e> на панели инструментов.
                При запуске моделирования схема проверяется на целостность.
                Если в цепи есть ошибки, отображается соответствующее сообщение и
                затронутые компоненты или провода выделяются. Если в схеме нет ошибок, симуляция
                включено. Теперь вы можете взаимодействовать с бегущей симуляцией.
                В режиме моделирования невозможно изменить схему. Для этого вам необходимо активировать
                снова в режиме редактирования, остановив симуляцию.
            </par>
        </subchapter>
        <subchapter heading="Первые шаги">
            <par> <image src="scr00.png" /> </par>
            <par>
                В качестве первого примера схема должна быть построена с вентилем Исключающее ИЛИ.
                В главном окне меню <e>Компоненты</e> позволяет выбирать различные компоненты.
                Затем они размещаются на панели для рисования. Этот процесс можно отменить, нажав клавишу ESC в любом
                время. Начните с выбора входного компонента.
                Позже этим можно будет управлять в интерактивном режиме с помощью мыши.
                <par> <image src="scr01.png" /> </par>
                <par>
                    После выбора первый вход можно разместить на панели рисования.
                    Красная точка на символе входного компонента - это точка соединения между компонентом и проводом, который будет
                    подключен позже.
                    Красный цвет указывает на выход. Это означает, что порт определяет значение сигнала или может управлять проводом.
                </par>
                <par> <image src="scr02.png" /> </par>
                <par>
                    Таким же образом добавляется второй вход. Лучше всего разместить его прямо под первым входом.
                </par> <image src="scr03.png" /> </par>
            <par>
                После добавления входов выбирается элемент  XOR. Этот элемент представляют собой фактическую логическую
                функцию.
            </par>
            <par> <image src="scr04.png" /> </par>
            <par>
                Этот вентиль теперь также можно добавить в схему. Лучше всего разместить его так, чтобы последующие
                разводка выполняется максимально просто. Синие точки обозначают входные клеммы элемента.
            </par>
            <par> <image src="scr05.png" /> </par>
            <par>
                Теперь выберите выход, который можно использовать для отображения состояния сигнала или для последующей передачи сигналов в
                схема вложения.
            </par>
            <par> <image src="scr06.png" /> </par>
            <par>
                Он размещен таким образом, чтобы его можно было легко подключить.
                На выходе есть синяя точка, обозначающая входной терминал.
                Здесь вы можете ввести значение, которое затем экспортируется.
            </par>
            <par> <image src="scr07.png" /> </par>
            <par>
                После того, как все компоненты выбраны и установлены на свои места, с помощью мыши соедините синий и
                красные точки. Убедитесь, что ровно одна красная точка соединена с любым количеством синих точек.
                Только использование выходов с тремя состояниями позволяет отклониться от этого правила и соединить
                несколько красных точек.
                Если все провода нарисованы, цепь замкнута.
            </par>
            <par> <image src="scr08.png" /> </par>
            <par>
                Взаимодействие со схемой возможно при запуске моделирования.
                Это делается нажатием на кнопку воспроизведения, расположенную на панели инструментов.
                После запуска моделирования цвет проводов меняется, и
                входы и выходы теперь заполнены. Ярко-зеленый означает логическую «1», а темно-зеленый - логический «0».
                На рисунке выше все провода имеют значение «0».
            </par>
            <par> <image src="scr09.png" /> </par>
            <par>
                Щелчком мыши можно переключать входы. Поскольку симуляция теперь активна,
                выход изменяется в соответствии с текущими состояниями входа. Схема ведет себя как
                Исключающий ИЛИ, как и ожидалось.
            </par>
            <par> <image src="scr10.png" /> </par>
            <par>
                Для дальнейшей обработки схемы необходимо сначала остановить моделирование. Самый простой способ сделать это
                с помощью кнопки Стоп на панели инструментов. Щелчок по компоненту правой кнопкой мыши
                (щелкните macOS, удерживая нажатой клавишу Control), открывается диалоговое окно, в котором отображаются свойства компонента. Этикетка «А» может
                быть определенным для первого ввода через это диалоговое окно.
            </par>
            <par> <image src="scr11.png" /> </par>
            <par>
                Таким же образом можно определить метки для остальных входов и выходов. Пункт меню
                <e>Анализ </e> также содержит пункт меню <e> Анализ</e>. Эта функция выполняет анализ
                текущая цепь. Однако это возможно только при правильной маркировке всех входов и выходов.
            </par>
            <par> <image src="scr12.png" /> </par>
            <par>
                Таблица истинности смоделированной схемы появится в новом окне. Под таблицей вы можете найти
                алгебраическое выражение, связанное со схемой. Если существует несколько возможных алгебраических
                выражений, откроется отдельное окно, в котором будут показаны все возможные выражения.
            </par>
            <par> <image src="scr13.png" /> </par>
            <par>
                В главном меню диалогового окна таблицы есть пункт <e>K-Map</e>. Это позволяет показать
                таблицу истинности в виде K-карты.
            </par>
            <par> <image src="scr14.png" /> </par>
            <par>
                Вверху этого диалогового окна есть раскрывающийся список, который позволяет выбрать желаемый
                выражение в K-карте. Таким образом вы можете, например, проиллюстрировать, как несколько эквивалентных
                могут возникнуть алгебраические выражения. Однако в этом примере есть только одно минимальное выражение.
                Таблицу истинности также можно изменить, щелкнув K-карту.
            </par>
        </subchapter>
        <subchapter heading="Провода">
            <par>
                Все компоненты должны быть соединены проводами. Невозможно соединить два компонента
                разместив их рядом друг с другом.
            </par>
            <par>
                Кроме того, есть только соединения между конечной точкой провода и компонентом.
                Если вывод компонента расположен в середине провода, соединение между компонентом не выполняется.
                и провод.
                Следовательно, провод должен фактически заканчиваться на каждом контакте, который должен быть подключен.
                Даже если используется туннельный компонент, между штифтом и туннельным элементом должен быть провод.
            </par>
            <par>
                Чтобы переместить компонент, необходимо выбрать его с помощью инструмента прямоугольного выделения.
                вместе с подключенными проводами. Для перемещения компонента без подключенных проводов,
                выберите компонент щелчком мыши.
            </par>
            <par>
                С помощью CTRL-Click можно выбрать одиночный участок провода, чтобы переместить или удалить его.
                Если во время рисования провода нажать клавишу D, можно нарисовать диагональный провод.
                Клавиша S позволяет разделить линейный сегмент на два сегмента.
            </par>
        </subchapter>
        <subchapter heading="Иерархический дизайн">
            <par>
                Если построена сложная схема, это может быстро запутать. Чтобы отследить здесь,
                разные части схемы могут храниться в разных файлах. Этот механизм также делает его
                возможно использовать подсхему, которая была создана один раз, несколько раз в следующей схеме.
                Этот подход также предлагает то преимущество, что файлы могут храниться независимо друг от друга в
                система контроля версий и изменения могут быть отслежены.
            </par>
            <par> <image src="scr20.png" /> </par>
            <par>
                В качестве примера рассмотрим 4-битный сумматор: сначала мы построили простой полусумматор. Он состоит из
                Элемент XOR и Элемент И. Сумма двух битов «A» и «B» передается на выходы «S» и «C».
                Эта схема хранится в файле <e>halfAdder.dig</e>.
            </par>
            <par> <image src="scr21.png" /> </par>
            <par>
                Теперь из двух полусумматоров можно построить полный сумматор. Для этого создайте новый пустой файл и сохраните
                пустой файл как <e>fullAdder.dig</e> в той же папке, что и полусумматор. Тогда
                полусумматор можно добавить в новую схему через меню <e>Components</e><arrow/> <e>Custom</e>.
                Порядок контактов на упаковке полусумматора можно изменить с полусумматора в
                menu <e>Редактировать</e><arrow/> <e>Порядок входов</e> или <e>Edit</e><arrow/> <e>Порядок выходов</e>.
                Полный сумматор складывает три бита «A», «B» и «Ci» и дает сумму для выходов «S» и «Co».
            </par>
            <par> <image src="scr22.png" /> </par>
            <par>
                Чтобы проверить правильность работы полного сумматора, необходимо добавить тестовый пример. В тестовом примере
                сохраняется таблица истинности, которая должна выполнять схему. Таким образом, это может быть автоматически
                проверил, так ли это.
            </par>
            <par> <image src="scr23.png" /> </par>
            <par>
                Тесты могут быть выполнены с помощью редактора тестовых примеров или кнопки тестирования на панели инструментов.
                Ячейки таблицы, выделенные зеленым цветом, показывают, что выход схемы соответствует
                таблица истинности, приведенная в тестовом примере.
            </par>
            <par> <image src="scr24.png" /> </par>
            <par>
                Теперь полные сумматоры можно собрать в так называемый сумматор с волновым переносом.
                В этом случае выход переноса дополнения направляется как вход переноса в добавление
                следующий бит более высокого порядка, как это обычно бывает при сложении карандаша и бумаги.
                Этот 4-битный сумматор следует проверить на правильность работы. Для этого был вставлен тестовый пример.
            </par>
            <par> <image src="scr25.png" /> </par>
            <par>
                Этот тестовый пример выполняет 100% тест, который возможен только с относительно простыми схемами: все
                возможные 512 входных комбинаций применяются к схеме, и проверяется,
                схемы правильно.
                В первой строке перечислены входные и выходные сигналы. Ниже вводятся применяемые входные значения и
                проверяемые выходные значения указываются в строке, как в таблице истинности.
                Однако в этом примере требуется 512 строк. Ввод этого будет утомительным и подверженным ошибкам занятием.
                Автоматически генерировать нужные строки проще и надежнее.
                Для этого пересекаются переменные <e>A </e> и <e> B</e>.
                от 0 до 15. Соответствующие значения <e>A </e> и <e> B</e> затем назначаются входам «A [n]» и «B [n]».
                Затем проверяется, выводит ли схема значение <e>A + B</e>. Затем снова проверяется с помощью
                установлен бит переноса, и в этом случае должно получиться <e>A + B + 1</e>.
                Подробная информация о синтаксисе теста представлена ​​в диалоговом окне справки.
            </par>
            <par>
                Если схема встроена в другую схему, только имя файла подсхемы сохраняется в
                схема, а не сама встроенная схема.
                Соответствующие файлы
                поэтому встроенные подсхемы должны быть найдены в файловой системе во время выполнения моделирования.
                Чтобы как можно лучше поддерживать различные методы работы пользователей и при этом избегать
                сложное администрирование путей импорта и т.д., реализована несколько необычная стратегия импорта.
            </par>
            <par>
                В файле схем хранятся только имена файлов встроенных схем, а не полный путь.
                Если файл необходимо открыть, во всех вложенных папках выполняется поиск файла с соответствующим именем.
                Если подходящий файл найден, он импортируется. Этот процесс зависит только от имени файла, который нужно
                быть прочитанным, а не на своем пути. Соответственно, выдается сообщение об ошибке, если имеется несколько файлов
                одно и то же имя в разных подпапках, поскольку в этом случае возникают двусмысленности.
            </par>
            <par>
                Таким образом, подходящая структура проекта выглядит следующим образом: Корневой контур расположен в отдельном
                папка.
                Все импортированные схемы должны находиться в одной папке или подпапках. Все схемы должны иметь разные названия,
                поэтому не должно происходить, чтобы схемы с одним и тем же именем находились в разных папках.
            </par>
        </subchapter>
    </chapter>
    <chapter heading="Моделирование">
        <subchapter heading="Задержка распространения">
            <par>
                Во время моделирования каждый логический вентиль имеет задержку распространения. Каждый компонент, найденный в библиотеке
                имеет одинаковую задержку распространения независимо от его сложности.
                Таким образом, логический элемент И имеет ту же задержку распространения, что и умножитель.
                Единственным исключением являются диоды, переключатели и разветвители, которые используются для создания шин данных.
                Эти компоненты вообще не имеют задержки распространения.
            </par>
            <par>
                Если необходимо смоделировать логический элемент - например, множитель - с большей задержкой распространения, задержкой
                вентиль должен быть вставлен в схему сразу за выходом умножителя.
            </par>
            <par>
                Если схема включена в другую родительскую схему, включенная схема сохраняет свои временные характеристики.
                Поэтому, если вы включите сложную схему, которая имеет большую задержку распространения, потому что входные сигналы
                должен пройти три гейта, пока не достигнет выхода, это поведение сохраняется при включении этого
                схема.
                Никаких дополнительных задержек в результате включения цепи не возникает. Если не все выходы
                схема есть
                такая же задержка распространения, то это также имеет место, если она включена в родительский контур.
                В общем, включение схемы в другую схему вообще не изменяет ее временное поведение. An
                включенная цепь ведет себя точно так же, как если бы все компоненты были вставлены в одну и ту же цепь
                уровень.
            </par>
        </subchapter>
    </chapter>
    <chapter heading="Анализ">
        <subchapter heading="Анализ и синтез схем">
            <par>
                Цепь можно проанализировать с помощью пункта меню <e>Анализ</e>. Таблица истинности создается для чисто
                комбинаторные схемы. Эту таблицу истинности можно редактировать по желанию.
                После редактирования из этой таблицы истинности может быть сгенерирована новая схема.
            </par>
            <par>
                Помимо чисто комбинаторных схем, также можно анализировать или генерировать последовательные
                схемы.
                Вместо простой таблицы истинности создается так называемая таблица переходов состояний.
                Таким образом, каждый триггер появляется на входной и выходной стороне таблицы переходов состояний.
                В этой таблице справа вы можете найти следующее состояние, которое будет
                происходит после следующего тактового сигнала. Это следующее состояние зависит от текущего состояния триггеров.
                в левой части таблицы.
                Чтобы анализ был возможен, триггеры должны быть названы.
            </par>
            <par>
                Применяется следующее соглашение об именах: следующее состояние бита в правой части таблицы
                обозначается строчной буквой «n + 1». Соответствующее текущее состояние обозначается добавленным «n».
                Если существует переменная состояния «A», «An» указывает текущее состояние, а «An + 1» указывает следующее состояние.
                Если в таблице истинности слева и справа присутствуют сигналы, соответствующие этому шаблону
                предполагается, что таблица является таблицей переходов состояний, и вместо нее создается последовательная схема.
                комбинаторная схема.
            </par>
            <par>
                Следует отметить, что анализируемая схема может содержать только чисто комбинаторные элементы в
                в дополнение к встроенным шлепанцам D и JK. Если триггер, например, сделано из элеметнов ИЛИ-НЕ, это
                Схема не распознается как триггер, поэтому анализ такой схемы невозможен.
            </par>
        </subchapter>
        <subchapter heading="Выражение">
            <par>
                Через пункт меню <e>Выражение</e> можно ввести логическую функцию, из которой
                затем может быть сгенерирована цепь.
            </par>
        </subchapter>
        <subchapter heading="Диаграммы состояний">
            <par>
                Редактор диаграмм состояний доступен через пункт меню <e>Конечный автомат</e>.
                Он позволяет графическое создание конечных автоматов путем рисования состояний и переходов между состояниями.
                Таким образом, разные выходы могут быть установлены в разные состояния.
                Предоставляя переходы с условиями, можно сгенерировать входные сигналы.
                Установив выходные значения при переходах, можно также определить автоматы Мили.
            </par>
            <par>
                Определенный таким образом конечный автомат затем может быть автоматически перенесен в таблицу переходов состояний,
                из которого на следующем этапе может быть сгенерирована схема, реализующая автомат начальных состояний.
                Если затем запустить моделирование этой схемы, текущее состояние также можно будет отслеживать в
                диаграмма состояния.
            </par>
        </subchapter>
    </chapter>
    <chapter heading="Оборудование">
        <subchapter heading="GAL16v8 и GAL22v10">
            <par>
                В меню генерации схемы в таблице истинности также есть функции для генерации так называемых
                Файлы JEDEC. Это специальный формат файла, который описывает схему предохранителей PLD.
                Этот файл JEDEC можно записать в соответствующий PLD с помощью специального программатора.
                На данный момент схемы типа <e>GAL16v8 </e> и <e> GAL22v10</e> или схемы предохранителей совместимы
                устройства поддерживаются.
            </par>
        </subchapter>
        <subchapter heading="ATF150xAS">
            <par>
                Микросхемы в
                <a href="https://www.microchip.com/design-centers/programmable-logic/spld-cpld/cpld-atf15xx-family">
                    <e>ATF150x</e>
                </a>
                Семейство - это простые CPLD, содержащие до 128 макроячеек. Они доступны в
                Пакет PLCC, который делает их пригодными для лабораторных упражнений: если ИС разрушается во время упражнений,
                его можно просто заменить. Кроме того, с
                <a href="https://www.microchip.com/design-centers/programmable-logic/spld-cpld/tools/hardware/atdh1150usb">
                    <e>ATDH1150USB</e>
                </a>
                доступен простой в использовании и недорогой программатор. Этот программист умеет программировать
                <a href="https://www.microchip.com/design-centers/programmable-logic/spld-cpld/cpld-atf15xx-family">
                    <e>ATF150x</e>
                </a>
                микросхемы в системе с использованием интерфейса JTAG.
                Подходящая оценочная плата
                <a href="https://www.microchip.com/DevelopmentTools/ProductDetails.aspx?PartNO=ATF15XX-DK3-U">
                    (<e>ATF15XX-DK3-U</e>)
                </a>
                также доступен.
                Программное обеспечение
                <a href="https://www.microchip.com/design-centers/programmable-logic/spld-cpld/tools/software/atmisp">
                    <e>ATMISP</e>
                </a>,
                который доступен на веб-сайте ATMEL/Microchip, необходим для программирования микросхем.
            </par>
            <par>
                К сожалению, информация о карте предохранителей не является общедоступной, поэтому нет подходящего установщика для этого чипа.
                могут быть интегрированы в Digital, как это возможно с микросхемами <e>GAL16v8 </e> и <e> GAL22v10</e>.
            </par>
            <par>
                Следовательно, необходимо использовать установщики <e>fit150 [x] .exe</e>, предоставленные ATMEL. Эти программы создают
                Файл <e>JEDEC </e> из подходящего файла <e> TT2</e>, который затем можно запрограммировать на микросхеме. Цифровой
                автоматически запускает установщик каждый раз при создании файла <e>TT2</e>. Для этого путь к
                Установщики <e>fit150 [n] .exe</e> должны быть указаны в настройках.
                Созданный файл <e>JEDEC</e> затем можно открыть и запрограммировать напрямую с помощью
                <a href="https://www.microchip.com/design-centers/programmable-logic/spld-cpld/tools/software/atmisp">
                    <e>ATMISP</e>
                </a>.
            </par>
            <par>
                По юридическим причинам установщик <e>fit1502.exe</e> не может распространяться вместе с Digital. Однако это может быть
                находится в папке <e>WinCupl \ Fitters</e> после установки
                <a href="https://www.microchip.com/design-centers/programmable-logic/spld-cpld/tools/software/wincupl">
                    <e>WinCupl</e>
                </a>.
                <a href="https://www.microchip.com/design-centers/programmable-logic/spld-cpld/tools/software/wincupl">
                    <e>WinCupl</e>
                </a>
                доступен на веб-сайте ATMEL/Microchip.
                В системах Linux установщики также могут выполняться Digital, если установлено <e>wine</e>.
            </par>
        </subchapter>
        <subchapter heading="Экспорт в VHDL или Verilog">
            <par>
                Схема может быть экспортирована в VHDL или Verilog. Создается файл, содержащий полное описание
                схемы. Сгенерированный код VHDL был протестирован с
                <a href="https://www.xilinx.com/products/design-tools/vivado.html">Xilinx Vivado</a>
                и симулятор VHDL с открытым исходным кодом <a href="http://ghdl.free.fr/">ghdl</a>.
                Код Verilog протестирован с помощью симулятора Verilog <a href="http://iverilog.icarus.com/">Icarus Verilog</a>.
            </par>
            <par>
                Если схема содержит тестовые примеры, тестовые данные используются для создания тестового стенда HDL. Это можно использовать
                для проверки правильности работы схемы в моделировании HDL.
            </par>
            <par>
                Могут быть созданы дополнительные файлы, необходимые для специальных плат. В настоящее время только
                <a href="https://reference.digilentinc.com/reference/programmable-logic/basys-3/start">BASYS3</a>
                доска и доски Mimas <a href="https://numato.com/product/mimas-spartan-6-fpga-development-board">Mimas</a>
                и <a href="https://numato.com/product/mimas-v2-spartan-6-fpga-development-board-with-ddr-sdram">Mimas V2</a>
                поддерживаются.
                Создается файл ограничений, содержащий назначение выводов. Описание булавок может
                можно найти в листе технических данных платы, и его необходимо ввести как номер контакта для входов и выходов.
            </par>
            <par>
                Для платы BASYS3, если тактовая частота схемы низкая, в HDL встроен делитель частоты.
                код, чтобы соответственно разделить часы на плате.
                Если тактовая частота, выбранная в схеме, превышает 4,7 МГц, блок MMCM
                Artix-7 используется для генерации часов.
                Это гарантирует, что ресурсы FPGA, предоставленные для распределения часов, используются.
                Это позволяет включенному образцу процессора работать на частоте 20 МГц, и, если вы можете обойтись без
                множитель, также возможен 30HMz.
            </par>
            <!-- par>
                Также на платах Mimas для генерации часов используется Spartan 6 DCM.
            </par-->
            <par>
                Если схема должна работать на плате BASYS3, в Vivado можно создать новый проект.
                Сгенерированный файл VHDL и файл ограничений необходимо добавить в проект.
                После создания проекта можно сгенерировать поток битов и использовать Hardware-Manager.
                для программирования платы BASYS3.
            </par>
            <par>
                Чтобы создать требуемый файл ограничений в дополнение к файлу HDL, соответствующая плата
                необходимо настроить в настройках. В поле «Toolchain Configuration» соответствующий файл XML.
                можно выбрать.
                Доступные конфигурации находятся в папке <e>examples/hdl</e> и содержат файл
                расширение <e>.config</e>.
                Если конфигурация была успешно интегрирована, появится дополнительное меню, в котором плата
                доступны определенные функции.
            </par>
        </subchapter>
    </chapter>
    <chapter heading="Пользовательские компоненты">
	    <par>
	        Хотя у Digital есть несколько параметров, которые определяют внешний вид схемы, когда она встроена в
	        в другую, в некоторых случаях может быть полезно использовать особый компонент для подсхемы. Примером является
	        представление ALU в процессоре, смотреть в примерах. В этой главе объясняется, как
	        определить такой особый компоненты цепи.
	    </par>
	    <par>
	        В Digital нет редактора для создания особого компонента. Вместо этого требуется небольшой обходной путь
	        для создания фигуры контура: сначала открывается компонент, который должен быть представлен специальным открытм компонентном.
	        Затем для этой схемы создается шаблон SVG. В этом шаблоне схема представлена
	        простым прямоугольником. Он также содержит все контакты схемы, представленные синим цветом (входы) и
	        красные (выходы) кружочки. Чтобы узнать, какой круг принадлежит какому выводу, вы можете посмотреть идентификатор
	        кружка в свойствах объекта. Этот идентификатор имеет вид <e>pin: [имя] </e> или <e> pin +: [name]</e>.
	        В последнем варианте вывод снабжен ярлыком при повторном импорте в цифровой формат.
	        Если вам не нужна такая метка, можно удалить <e>+</e>.
	    </par>
	    <par>
	        Теперь этот файл SVG можно редактировать. Наиболее подходящей является программа с открытым исходным кодом.
	        <a href="https://inkscape.org/en/">Inkscape</a>, которая доступна бесплатно.
	        Выводы можно перемещать свободно, но при повторном импорте они перемещаются к следующей точке сетки.
	    </par>
	    <par>
	        Если необходимо использовать существующие файлы SVG, проще всего открыть созданный шаблон и вставить
	        существующий рисунок в шаблон с помощью копирования и вставки.
	    </par>
	    <par>
	        Если файл был сохранен, его можно импортировать с помощью Digital. Файл открывается и все необходимое
	        информация извлекается и сохраняется в схеме. Для дальнейшего использования схемы SVG
	        файл больше не требуется.
	    </par>
	    <par>
	        Последнее замечание: SVG - очень мощный и гибкий формат файла.
	        Его можно использовать для описания чрезвычайно сложной графики. Цифровой импортер не может импортировать все
	        возможные файлы SVG без ошибок. Если файл не может быть импортирован или отображается не так, как ожидалось,
	        может потребоваться некоторое экспериментирование, прежде чем будет достигнут желаемый результат.
	    </par>
	</chapter>
	<chapter heading="Общие схемы">
	    <par>
	        Бывает, что подсхема создана, и ее нужно использовать в разных вариантах.
	        Например, вы можете представить специальный счетчик, который нужен для разной разрядности.
	        Если создать подсхему на 4, 5 и 6 бит каждая, обслуживание схемы
	        будет усложнено в будущем, так как всегда нужно работать с несколькими подсхемами, которые
	        идентичны, за исключением одного параметра - разрядности.
	    </par>
	    <par>
	        Чтобы предотвратить это, можно создать общую подсхему, которая может быть параметризована.
	        Для этого в настройках контура должен быть установлен флажок «Цепь является универсальной».
	        Затем диалоговое окно параметров каждого компонента в этой цепи содержит дополнительное поле "общая параметеризация".
            В это поле можно ввести программный код, который может изменять параметры
	        составная часть. Каждый параметр имеет имя и может быть изменен как атрибут поля <e>this</e>.
	        Названия параметров можно найти в диалоговом окне справки компонента.
	        Если вы хотите изменить разрядность сумматора, можно использовать строку <e>this.Bits=1;</e>.
	    </par>
	    <par>
	        Однако таким образом еще невозможно создать схему, которая может быть параметризована.
	        По-прежнему необходимо получить доступ к параметрам, которые устанавливаются при использовании схемы.
	        Это делается через поле «args». Если вы хотите установить разрядность снаружи, вы можете написать:
	        <e>this.Bits=args.bitWidth;</e>. Имя аргумента - здесь <e>bitWidth</e> произвольно.
	        Если такая подсхема используется, этот аргумент должен быть установлен.
	    </par>
	    <par>
	        Если схема используется и открывается диалоговое окно параметров встроенной схемы, она также имеет
	        поле «общая параметризация». Здесь используемую разрядность можно установить с помощью инструкции
	        <e>bitWidth:=5;</e>.
	    </par>
	    <par>
	        Если общий контур должен быть запущен напрямую, это невозможно сразу, так как требуемые
	        отсутствуют аргументы, которые необходимо указать при встраивании схемы. Эти недостающие аргументы
	        приведет к появлению соответствующих сообщений об ошибках.
	        Поэтому, чтобы упростить тестирование схемы, компонент <e>Generic Initialization</e> может быть
	        добавлен в схему. В этом компоненте вы можете установить аргументы, которые будут поступать от схемы встраивания.
	        Таким образом, обычная схема также может быть смоделирована напрямую.
	        Если схема встроена, этот компонент игнорируется.
	        Он нужен только для непосредственного запуска симуляции.
	    </par>
	    <par>
	        При определенных обстоятельствах может быть полезно не только изменить атрибуты компонентов
	        схему, но добавить совершенно новые компоненты и провода в зависимости от переданных аргументов.
	        Для этого можно использовать компонент <e>Code</e>. Если он добавлен в схему, содержащийся
	        Код будет выполнен при запуске симуляции.
	        Здесь провод можно добавить с помощью функции <e>addWire ([x1], [y1], [x2], [y2])</e> и с помощью функции
	        <e>addComponent ([name], [x], [y]) </e> новый компонент <e> [name]</e> может быть добавлен в позицию ([x], [y]).
	        Возвращаемое значение функции <e>addComponent ([Name], [x], [y])</e> позволяет установить параметры
	        составная часть.
	    </par>
	    <par>
	        Схема примера <e>examples/generic/modify/Conway/GenericConway.dig</e> показывает, как более сложные
	        Схема может быть собрана таким образом.
	    </par>
	    <par>
	        Другой способ создания схемы - это рекурсия: можно, в зависимости от аргументов, заменить одну
	        схема другим. Для этого доступна функция <e>setCircuit([Name])</e>.
	        Если он вызывается в части определения подсхемы, вставляемая схема может быть заменена
	        по другой схеме. Это позволяет рекурсивно определять схему. Как и в другом программировании
	        языков, должно быть обеспечено подходящее условие прекращения.
	    </par>
	    <par>
	        Папка <e>examples/generic</e> содержит пример счетчика кода Грея, разрядность которого может
	        быть настроенным. Здесь счетчик кода Грея создается путем рекурсивного добавления дополнительных битов к
	        начальная схема до тех пор, пока не будет достигнуто необходимое количество бит счетчика.
	    </par>
	</chapter>
	<chapter heading="Тестирование под управлением сценария">
	    <par>
	        Если учащиеся должны выполнять упражнения в цифровом формате, может быть полезно, если схемы, представленные
	        студенты могут быть проверены в автоматическом режиме. Для выполнения этой проверки можно запустить Digital
	        из командной строки. Вызов осуществляется следующим образом:
	    </par>
	    <par>
	        <code>
	            java -cp Digital.jar CLI test [файл для тестирования] [-tests [необязательный файл с
	            тестовыми примерами]]
	        </code>
	    </par>
	    <par>
	        Если указан только проверяемый файл, выполняются тестовые случаи в этом файле. Таким образом,
	        могут быть выполнены тестовые примеры, созданные самими студентами.
	    </par>
	    <par>
	        Если указано второе имя файла, тестовые примеры берутся из второго файла и первой схемы.
	        проверяется с помощью этих тестовых примеров. Поэтому второй файл обычно будет содержать образец решения.
	        чьи тестовые примеры полны и верны. Схема, содержащаяся во втором файле, игнорируется.
	        Из него взяты только тестовые примеры.
	    </par>
	    <par>
	        Чтобы протестировать представленную схему на примере решения, имена сигналов входов и
	        выходы в обеих цепях должны совпадать.
	    </par>
	</chapter>
	<chapter heading="Часто задаваемые вопросы">
	    <faq>
	        <question>Как переместить провод?</question>
	        <answer> Выберите одну из конечных точек с помощью прямоугольного выделения. Затем переместите эту точку с помощью мыши.
	            Вы также можете выбрать провод с помощью CTRL + кнопка мыши.
	        </answer>
	    </faq>
	    <faq>
	        <question>Как удалить провод?</question>
	        <answer> Выберите одну из конечных точек и нажмите <e>DEL</e> или щелкните корзину.
	            Вы также можете выбрать провод с помощью CTRL + кнопка мыши.
	        </answer>
	    </faq>
	    <faq>
	        <question>Как переместить компонент, включая все подключенные провода?</question>
	        <answer> Выделите компонент прямоугольным выделением. Выборка должна включать все
	            составная часть.
	            Затем переместите компонент, включая провода, с помощью мыши.
	        </answer>
	    </faq>
	    <faq>
	        <question>Компонент не подключен к проводу, хотя контакты находятся на проводе.</question>
	        <answer>Вывод подключается к проводу только в том случае, если у провода есть конечная точка на выводе.</answer>
	    </faq>
	    <faq>
	        <question> Если имена выводов в цепи длинные, они становятся нечитаемыми, когда
	        схема встроена. Что я могу сделать? </question>
	    <answer>Ширину блока можно увеличить с помощью пункта меню
	        <e>Измените <arrow/>настройки контура</e>.</answer>
	    </faq>
	    <faq>
	        <question>Неоптимальный порядок выводов встроенной схемы. Как это можно изменить?</question>
	    <answer>Последовательность можно изменить с помощью пункта меню <e>Редактировать <arrow />Порядок входов</e> или
	    <e>Изменить <arrow/>порядов выводов</e>.</answer>
	            </faq>

	    <faq>
	        <question>Когда начинается симуляция, провод становится серым. Что это значит?</question>
	        <answer> Светло-зеленый и темно-зеленый цвета используются для обозначения высокого и низкого состояния.
	            Серый цвет означает, что провод находится в состоянии высокого Z.
	        </answer>
	    </faq>
	    <faq>
	        <question>У меня есть таблица истинности. Как вычислить минимизированные логические уравнения?</question>
	        <answer> В меню <e>Анализ </e> выберите запись <e> Синтез</e>. Затем войдите в таблицу истинности.
	            Внизу окна вы можете найти соответствующее логическое уравнение. Если вы введете более одного
	            зависимой переменной открывается новое окно, в котором показаны все логические уравнения.
	        </answer>
	    </faq>
	    <faq>
	        <question>Я ввел таблицу истинности, но здесь показано более одного логического уравнения.
	            Какой из них правильный?
	        </question>
	        <answer>Минимизация логического уравнения может привести к множеству уравнений, описывающих одну и ту же функцию.
	            Цифровой показывает их все, и все они составляют одну и ту же таблицу истинности.
	            Могут быть различия в зависимости от «безразлично» в таблице истинности.
	        </answer>
	    </faq>
	    <faq>
	        <question>У меня есть таблица истинности. Как создать схему, представляющую таблицу истинности?</question>
	        <answer> В меню <e>Анализ </e> выберите запись <e> Синтез</e>. Затем войдите в таблицу истинности.
	        Таблицу можно редактировать с помощью меню <e>Создать </e> или <e> Изменить</e>.
	        В меню <e>Create </e> вы можете создать схему с помощью элемента <e> Circuit</e>.
	        </answer>
	    </faq>
	    <faq>
	        <question>Как отредактировать имя сигнала в таблице истинности?</question>
	        <answer>Щелкните правой кнопкой мыши имя в заголовке таблицы, чтобы изменить имя.</answer>
	    </faq>
	    <faq>
	        <question>У меня есть логическое уравнение. Как создать схему?</question>
	        <answer> В меню <e>Анализ </e> выберите запись <e> Выражение</e>. Затем введите уравнение.
	        </answer>
	    </faq>
	    <faq>
	        <question>Как создать таблицу истинности из логического уравнения?</question>
	        <answer> В меню <e>Анализ </e> выберите запись <e> Выражение</e>. Затем введите выражение.
	            Затем создайте схему и в меню <e>Анализ </e> используйте запись <e> Анализ</e>, чтобы создать истину.
	            Таблица.
	        </answer>
	    </faq>
	    <faq>
	        <question>Как создать файл JEDEC из заданной цепи?</question>
	        <answer>В меню <e>Анализ </e> выберите запись <e> Анализ </e>. Затем в меню <e>Создать</e>.
                в новом
                окне выберите нужное устройство в подменю <e>Устройство</e>.
	        </answer>
	    </faq>
	    <faq>
	        <question>При создании файла JEDEC: как назначить пин-код определенному сигналу?</question>
	        <answer>На соответствующих входах и выходах вы можете ввести количество выводов в диалоге настроек
	            вывод.
	        </answer>
	    </faq>
	    <faq>
	        <question>Я создал файл JEDEC. Как запрограммировать его на <e>GAL16v8</e> или <e>GAL22v10</e>?
	        </question>
	        <answer>Для программирования такой микросхемы необходимо специальное программаторное оборудование.</answer>
	    </faq>
	    <faq>
	        <question> Я создал схему, которую хочу использовать во многих других схемах.
	            Как я могу сделать это, не копируя файл снова и снова в соответствующие папки?
	        </question>
	        <answer>Схему можно сохранить в папке "lib". Тогда он доступен во всех остальных схемах.
	        </answer>
	    </faq>
	</chapter>
	<chapter heading="Сочетания клавиш" newpage="true">
	    <shortcuts>
	        <shortcut key="Space">Запускает или останавливает моделирование.</shortcut>
	        <shortcut key="F6">Открывает диалоговое окно таблицы измерений.</shortcut>
	        <shortcut key="F7">Бежать до конца.</shortcut>
	        <shortcut key="F8">Выполнить тестовые примеры.</shortcut>
	        <shortcut key="C"> Один тактовый шаг (работает только при работающем моделировании и только при наличии одного
	            часовая составляющая).
	        </shortcut>
	        <shortcut key="V">Выполнить один шаг гейта.</shortcut>
	        <shortcut key="B">Выполнять все шаги с одним вентилем, пока схема не стабилизируется или,
	            если присутствует разрывной компонент, до разрыва.</shortcut>
	        <shortcut key="F9">Анализ схемы.</shortcut>
	        <shortcut key="CTRL-A">Выбрать все.</shortcut>
	        <shortcut key="CTRL-X">Вырезает выбранные компоненты в буфер обмена.</shortcut>
	        <shortcut key="CTRL-C">Копирует выбранные компоненты в буфер обмена.</shortcut>
	        <shortcut key="CTRL-V">Вставляет компоненты из буфера обмена.</shortcut>
	        <shortcut key="CTRL-D">Дублировать текущий выбор без изменения буфера обмена.</shortcut>
	        <shortcut key="R">При вставке компоненты поворачиваются.</shortcut>
	        <shortcut key="L">Снова вставляет последний вставленный компонент.</shortcut>
	        <shortcut key="T">Вставляет новый туннель.</shortcut>
	        <shortcut key="CTRL-N">Новая цепь.</shortcut>
	        <shortcut key="CTRL-O">Обрыв цепи.</shortcut>
	        <shortcut key="CTRL-S">Сохраните схему.</shortcut>
	        <shortcut key="CTRL-Z">Отменить последнее изменение.</shortcut>
	        <shortcut key="CTRL-Y">Вернуть последнее отмененное изменение.</shortcut>
	        <shortcut key="P">Программирует диод или FGFET.</shortcut>
	        <shortcut key="D">При рисовании провода переключается в диагональный режим.</shortcut>
	        <shortcut key="F">При рисовании линии меняет ориентацию.</shortcut>
	        <shortcut key="S">Разделяет один провод на два провода.</shortcut>
	        <shortcut key="ESC">Прервать текущее действие.</shortcut>
	        <shortcut key="Del">Удаляет выбранные компоненты.</shortcut>
	        <shortcut key="Backspace">Удаляет выбранные компоненты.</shortcut>
	        <shortcut key="+">Увеличивает количество входов в компоненте, на который указывает мышь. Если он используется с
	            константы, значение увеличивается.
	        </shortcut>
	        <shortcut key="-">Уменьшает количество входов в компоненте, на который указывает мышь. Если он используется с
	            константы, значение уменьшается.
	        </shortcut>
	        <shortcut key="CTRL +">Увеличить масштаб.</shortcut>
	        <shortcut key="CTRL -">Уменьшить.</shortcut>
	        <shortcut key="F1">По размеру.</shortcut>
	        <shortcut key="F5">Показать или скрыть древовидное представление компонентов.</shortcut>
	    </shortcuts>
	</chapter>
</root>
